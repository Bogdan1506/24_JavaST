13:23:14 DEBUG TextServiceImpl createTree - started
13:23:14 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\another-test.txt
13:23:14 DEBUG TextDAOImpl readFile - started
13:23:14 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\another-test.txt
13:23:14 DEBUG TextDAOImpl readFile - return value is [One!, One, two.]
13:23:14 DEBUG ParagraphParser handleSplit - started
13:23:14 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, One!
One, two.
13:23:14 DEBUG SplitServiceImpl split - started
13:23:14 DEBUG SplitServiceImpl split - parameters are One!
One, two., PARAGRAPH
13:23:14 DEBUG SplitServiceImpl split - return value is [One!, One, two.]
13:23:14 DEBUG SentenceParser handleSplit - started
13:23:14 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, One!
13:23:14 DEBUG SplitServiceImpl split - started
13:23:14 DEBUG SplitServiceImpl split - parameters are One!, SENTENCE
13:23:14 DEBUG SplitServiceImpl split - return value is [One!]
13:23:14 DEBUG LexemeParser handleSplit - started
13:23:14 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, One!
13:23:14 DEBUG SplitServiceImpl split - started
13:23:14 DEBUG SplitServiceImpl split - parameters are One!, LEXEME
13:23:14 DEBUG SplitServiceImpl split - return value is [One!]
13:23:14 DEBUG WordParser handleSplit - started
13:23:14 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, One!
13:23:14 DEBUG SplitServiceImpl split - started
13:23:14 DEBUG SplitServiceImpl split - parameters are One!, WORD
13:23:14 DEBUG SplitServiceImpl split - return value is [One]
13:23:14 DEBUG CharacterParser handleSplit - started
13:23:14 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, One
13:23:14 DEBUG SplitServiceImpl split - started
13:23:14 DEBUG SplitServiceImpl split - parameters are One, CHARACTER
13:23:14 DEBUG SplitServiceImpl split - return value is [O, n, e]
13:23:14 DEBUG MarkParser handleSplit - started
13:23:14 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}]}, One!
13:23:14 DEBUG SplitServiceImpl split - started
13:23:14 DEBUG SplitServiceImpl split - parameters are One!, MARK
13:23:14 DEBUG SplitServiceImpl split - return value is [, !]
13:23:14 DEBUG CharacterParser handleSplit - started
13:23:14 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, !
13:23:14 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are !, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [!]
13:23:15 DEBUG SentenceParser handleSplit - started
13:23:15 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, One, two.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are One, two., SENTENCE
13:23:15 DEBUG SplitServiceImpl split - return value is [One, two.]
13:23:15 DEBUG LexemeParser handleSplit - started
13:23:15 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, One, two.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are One, two., LEXEME
13:23:15 DEBUG SplitServiceImpl split - return value is [One,, two.]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, One,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are One,, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [One]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, One
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are One, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [O, n, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}]}, One,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are One,, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, ,]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [,]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, two.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are two., WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [two]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, two
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are two, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, w, o]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {w}, {o}]}]}, two.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are two., MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, .]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [.]
13:23:15 DEBUG TextDAOImpl addTextObject - started
13:23:15 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{!}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:23:15 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{!}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:23:15 DEBUG TextServiceImpl createTree - started
13:23:15 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\test.txt
13:23:15 DEBUG TextDAOImpl readFile - started
13:23:15 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\test.txt
13:23:15 DEBUG TextDAOImpl readFile - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., It is a established fact that a reader will be of a page when looking at its layout., Bye...]
13:23:15 DEBUG ParagraphParser handleSplit - started
13:23:15 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye...
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye..., PARAGRAPH
13:23:15 DEBUG SplitServiceImpl split - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., It is a established fact that a reader will be of a page when looking at its layout., Bye...]
13:23:15 DEBUG SentenceParser handleSplit - started
13:23:15 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., SENTENCE
13:23:15 DEBUG SplitServiceImpl split - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged., It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.]
13:23:15 DEBUG LexemeParser handleSplit - started
13:23:15 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged., LEXEME
13:23:15 DEBUG SplitServiceImpl split - return value is [It, has, survived, not, only, five, centuries,, but, also, the, leap, into, electronic, typesetting,, remaining, essentially, unchanged.]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [It]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [I, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, has
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are has, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [has]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, has
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are has, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [h, a, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, has
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are has, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, survived
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are survived, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [survived]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, survived
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are survived, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [s, u, r, v, i, v, e, d]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, survived
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are survived, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, not
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are not, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [not]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, not
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are not, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [n, o, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, not
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are not, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, only
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are only, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [only]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, only
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are only, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [o, n, l, y]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, only
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are only, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, five
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are five, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [five]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, five
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are five, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [f, i, v, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, five
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are five, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, centuries,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are centuries,, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [centuries]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, centuries
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are centuries, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [c, e, n, t, u, r, i, e, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}]}, centuries,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are centuries,, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, ,]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [,]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, but
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are but, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [but]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, but
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are but, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [b, u, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, but
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are but, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, also
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are also, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [also]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, also
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are also, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a, l, s, o]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, also
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are also, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [the]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, leap
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are leap, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [leap]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, leap
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are leap, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, e, a, p]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, leap
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are leap, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, into
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are into, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [into]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, into
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are into, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, n, t, o]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, into
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are into, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, electronic
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are electronic, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [electronic]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, electronic
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are electronic, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [e, l, e, c, t, r, o, n, i, c]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, electronic
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are electronic, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, typesetting,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are typesetting,, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [typesetting]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, typesetting
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are typesetting, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, y, p, e, s, e, t, t, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}]}, typesetting,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are typesetting,, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, ,]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [,]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, remaining
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are remaining, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [remaining]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, remaining
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are remaining, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [r, e, m, a, i, n, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, remaining
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are remaining, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, essentially
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are essentially, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [essentially]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, essentially
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are essentially, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [e, s, s, e, n, t, i, a, l, l, y]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, essentially
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are essentially, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, unchanged.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are unchanged., WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [unchanged]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, unchanged
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are unchanged, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [u, n, c, h, a, n, g, e, d]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}]}, unchanged.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are unchanged., MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, .]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [.]
13:23:15 DEBUG LexemeParser handleSplit - started
13:23:15 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., LEXEME
13:23:15 DEBUG SplitServiceImpl split - return value is [It, was, popularised, in, the, with, the, release, of, Letraset, sheets, containing, Lorem, Ipsum, passages,, and, more, recently, withdesktop, publishing, software, like, Aldus, PageMaker, including, versions, of, Lorem, Ipsum.]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [It]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [I, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, was
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are was, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [was]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, was
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are was, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [w, a, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, was
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are was, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, popularised
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are popularised, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [popularised]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, popularised
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are popularised, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [p, o, p, u, l, a, r, i, s, e, d]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, popularised
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are popularised, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, in
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are in, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [in]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, in
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are in, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, n]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, in
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are in, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [the]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, with
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are with, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [with]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, with
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are with, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [w, i, t, h]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, with
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are with, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [the]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, release
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are release, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [release]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, release
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are release, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [r, e, l, e, a, s, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, release
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are release, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [of]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [o, f]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Letraset
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Letraset, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [Letraset]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Letraset
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Letraset, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [L, e, t, r, a, s, e, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, Letraset
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Letraset, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, sheets
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are sheets, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [sheets]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, sheets
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are sheets, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [s, h, e, e, t, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, sheets
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are sheets, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, containing
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are containing, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [containing]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, containing
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are containing, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [c, o, n, t, a, i, n, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, containing
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are containing, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Lorem
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Lorem, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [Lorem]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Lorem
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Lorem, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [L, o, r, e, m]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, Lorem
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Lorem, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, passages,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are passages,, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [passages]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, passages
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are passages, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [p, a, s, s, a, g, e, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}]}, passages,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are passages,, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, ,]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [,]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, and
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are and, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [and]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, and
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are and, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a, n, d]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, and
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are and, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, more
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are more, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [more]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, more
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are more, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [m, o, r, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, more
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are more, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, recently
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are recently, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [recently]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, recently
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are recently, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [r, e, c, e, n, t, l, y]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, recently
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are recently, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, withdesktop
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are withdesktop, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [withdesktop]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, withdesktop
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are withdesktop, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [w, i, t, h, d, e, s, k, t, o, p]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, withdesktop
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are withdesktop, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, publishing
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are publishing, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [publishing]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, publishing
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are publishing, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [p, u, b, l, i, s, h, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, publishing
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are publishing, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, software
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are software, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [software]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, software
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are software, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [s, o, f, t, w, a, r, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, software
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are software, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, like
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are like, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [like]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, like
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are like, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, i, k, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, like
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are like, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Aldus
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Aldus, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [Aldus]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Aldus
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Aldus, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [A, l, d, u, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, Aldus
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Aldus, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, PageMaker
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are PageMaker, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [PageMaker]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, PageMaker
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are PageMaker, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [P, a, g, e, M, a, k, e, r]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, PageMaker
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are PageMaker, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, including
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are including, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [including]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, including
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are including, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, n, c, l, u, d, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, including
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are including, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, versions
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are versions, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [versions]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, versions
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are versions, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [v, e, r, s, i, o, n, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, versions
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are versions, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [of]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [o, f]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Lorem
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Lorem, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [Lorem]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Lorem
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Lorem, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [L, o, r, e, m]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, Lorem
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Lorem, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum., WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum., MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, .]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [.]
13:23:15 DEBUG SentenceParser handleSplit - started
13:23:15 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., SENTENCE
13:23:15 DEBUG SplitServiceImpl split - return value is [It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout., The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.]
13:23:15 DEBUG LexemeParser handleSplit - started
13:23:15 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout., LEXEME
13:23:15 DEBUG SplitServiceImpl split - return value is [It, is, a, long, established, fact, that, a, reader, will, be, distracted, by, the, readable, content, of, a, page, when, looking, at, its, layout.]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [It]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [I, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [is]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, long
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are long, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [long]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, long
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are long, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, o, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, long
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are long, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, established
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are established, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [established]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, established
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are established, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [e, s, t, a, b, l, i, s, h, e, d]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, established
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are established, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, fact
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are fact, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [fact]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, fact
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are fact, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [f, a, c, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, fact
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are fact, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [that]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, reader
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are reader, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [reader]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, reader
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are reader, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [r, e, a, d, e, r]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, reader
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are reader, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, will
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are will, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [will]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, will
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are will, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [w, i, l, l]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, will
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are will, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, be
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are be, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [be]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, be
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are be, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [b, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, be
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are be, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, distracted
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are distracted, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [distracted]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, distracted
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are distracted, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [d, i, s, t, r, a, c, t, e, d]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, distracted
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are distracted, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, by
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are by, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [by]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, by
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are by, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [b, y]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, by
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are by, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [the]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, readable
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are readable, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [readable]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, readable
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are readable, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [r, e, a, d, a, b, l, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, readable
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are readable, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are content, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [content]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are content, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [c, o, n, t, e, n, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are content, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [of]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [o, f]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, page
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are page, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [page]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, page
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are page, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [p, a, g, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, page
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are page, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, when
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are when, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [when]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, when
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are when, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [w, h, e, n]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, when
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are when, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, looking
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are looking, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [looking]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, looking
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are looking, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, o, o, k, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, looking
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are looking, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, at
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are at, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [at]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, at
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are at, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, at
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are at, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, its
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are its, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [its]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, its
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are its, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, t, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, its
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are its, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, layout.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are layout., WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [layout]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, layout
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are layout, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, a, y, o, u, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}]}, layout.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are layout., MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, .]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [.]
13:23:15 DEBUG LexemeParser handleSplit - started
13:23:15 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., LEXEME
13:23:15 DEBUG SplitServiceImpl split - return value is [The, point, of, using, Ipsum, is, that, it, has, a, more-or-less, normal, distribution, of, letters,, as, opposed, to, using, 'Content, here,, content, here',, making, it, look, like, readable, English.]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, The
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are The, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [The]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, The
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are The, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [T, h, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, The
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are The, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, point
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are point, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [point]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, point
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are point, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [p, o, i, n, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, point
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are point, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [of]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [o, f]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, using
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are using, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [using]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, using
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are using, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [u, s, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, using
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are using, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [is]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [that]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, it
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are it, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [it]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, it
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are it, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, it
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are it, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, has
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are has, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [has]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, has
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are has, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [h, a, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, has
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are has, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, more-or-less
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are more-or-less, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [more-or-less]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, more-or-less
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are more-or-less, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [m, o, r, e, -, o, r, -, l, e, s, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, more-or-less
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are more-or-less, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, normal
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are normal, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [normal]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, normal
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are normal, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [n, o, r, m, a, l]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, normal
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are normal, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, distribution
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are distribution, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [distribution]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, distribution
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are distribution, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [d, i, s, t, r, i, b, u, t, i, o, n]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, distribution
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are distribution, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [of]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [o, f]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, letters,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are letters,, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [letters]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, letters
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are letters, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, e, t, t, e, r, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}]}, letters,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are letters,, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, ,]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [,]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, as
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are as, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [as]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, as
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are as, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, as
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are as, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, opposed
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are opposed, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [opposed]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, opposed
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are opposed, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [o, p, p, o, s, e, d]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, opposed
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are opposed, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, to
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are to, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [to]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, to
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are to, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, o]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, to
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are to, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, using
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are using, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [using]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, using
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are using, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [u, s, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, using
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are using, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[]}, 'Content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are 'Content, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [']
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, '
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ', CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [']
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[{type=MARK, components=[{'}]}]}, 'Content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are 'Content, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [, Content]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, 
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are , CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Content, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [C, o, n, t, e, n, t]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, here,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are here,, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [here]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, here
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are here, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [h, e, r, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}]}, here,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are here,, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, ,]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [,]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are content, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [content]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are content, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [c, o, n, t, e, n, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are content, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, here',
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are here',, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [here]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, here
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are here, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [h, e, r, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}]}, here',
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are here',, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, ',]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ',
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ',, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [', ,]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, making
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are making, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [making]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, making
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are making, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [m, a, k, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, making
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are making, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, it
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are it, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [it]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, it
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are it, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, it
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are it, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, look
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are look, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [look]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, look
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are look, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, o, o, k]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, look
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are look, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, like
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are like, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [like]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, like
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are like, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, i, k, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, like
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are like, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, readable
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are readable, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [readable]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, readable
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are readable, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [r, e, a, d, a, b, l, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, readable
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are readable, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, English.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are English., WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [English]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, English
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are English, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [E, n, g, l, i, s, h]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}]}, English.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are English., MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, .]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [.]
13:23:15 DEBUG SentenceParser handleSplit - started
13:23:15 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It is a established fact that a reader will be of a page when looking at its layout.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It is a established fact that a reader will be of a page when looking at its layout., SENTENCE
13:23:15 DEBUG SplitServiceImpl split - return value is [It is a established fact that a reader will be of a page when looking at its layout.]
13:23:15 DEBUG LexemeParser handleSplit - started
13:23:15 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It is a established fact that a reader will be of a page when looking at its layout.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It is a established fact that a reader will be of a page when looking at its layout., LEXEME
13:23:15 DEBUG SplitServiceImpl split - return value is [It, is, a, established, fact, that, a, reader, will, be, of, a, page, when, looking, at, its, layout.]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [It]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [I, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [is]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, established
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are established, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [established]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, established
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are established, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [e, s, t, a, b, l, i, s, h, e, d]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, established
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are established, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, fact
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are fact, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [fact]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, fact
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are fact, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [f, a, c, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, fact
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are fact, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [that]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, reader
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are reader, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [reader]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, reader
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are reader, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [r, e, a, d, e, r]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, reader
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are reader, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, will
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are will, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [will]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, will
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are will, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [w, i, l, l]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, will
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are will, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, be
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are be, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [be]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, be
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are be, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [b, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, be
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are be, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [of]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [o, f]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, page
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are page, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [page]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, page
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are page, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [p, a, g, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, page
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are page, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, when
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are when, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [when]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, when
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are when, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [w, h, e, n]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, when
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are when, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, looking
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are looking, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [looking]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, looking
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are looking, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, o, o, k, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, looking
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are looking, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, at
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are at, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [at]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, at
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are at, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, at
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are at, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, its
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are its, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [its]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, its
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are its, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, t, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, its
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are its, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, layout.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are layout., WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [layout]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, layout
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are layout, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, a, y, o, u, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}]}, layout.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are layout., MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, .]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [.]
13:23:15 DEBUG SentenceParser handleSplit - started
13:23:15 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Bye...
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Bye..., SENTENCE
13:23:15 DEBUG SplitServiceImpl split - return value is [Bye...]
13:23:15 DEBUG LexemeParser handleSplit - started
13:23:15 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Bye...
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Bye..., LEXEME
13:23:15 DEBUG SplitServiceImpl split - return value is [Bye...]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Bye...
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Bye..., WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [Bye]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Bye
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Bye, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [B, y, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}]}, Bye...
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Bye..., MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, ...]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ...
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ..., CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [., ., .]
13:23:15 DEBUG TextDAOImpl addTextObject - started
13:23:15 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}
13:23:15 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}
13:23:15 DEBUG TextServiceImpl receiveTextCollection - started
13:23:15 DEBUG TextDAOImpl receiveTextCollection - started
13:23:15 DEBUG TextDAOImpl receiveTextCollection - return value is {0={type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{!}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}]}]}, 1={type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}}
13:23:15 DEBUG TextServiceImpl receiveTextCollection - return value is {0={type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{!}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}]}]}, 1={type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}}
13:23:15 DEBUG TextServiceImpl createTree - started
13:23:15 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\test.txt
13:23:15 DEBUG TextDAOImpl readFile - started
13:23:15 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\test.txt
13:23:15 DEBUG TextDAOImpl readFile - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., It is a established fact that a reader will be of a page when looking at its layout., Bye...]
13:23:15 DEBUG ParagraphParser handleSplit - started
13:23:15 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye...
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye..., PARAGRAPH
13:23:15 DEBUG SplitServiceImpl split - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., It is a established fact that a reader will be of a page when looking at its layout., Bye...]
13:23:15 DEBUG SentenceParser handleSplit - started
13:23:15 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., SENTENCE
13:23:15 DEBUG SplitServiceImpl split - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged., It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.]
13:23:15 DEBUG LexemeParser handleSplit - started
13:23:15 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged., LEXEME
13:23:15 DEBUG SplitServiceImpl split - return value is [It, has, survived, not, only, five, centuries,, but, also, the, leap, into, electronic, typesetting,, remaining, essentially, unchanged.]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [It]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [I, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, has
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are has, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [has]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, has
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are has, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [h, a, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, has
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are has, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, survived
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are survived, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [survived]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, survived
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are survived, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [s, u, r, v, i, v, e, d]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, survived
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are survived, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, not
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are not, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [not]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, not
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are not, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [n, o, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, not
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are not, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, only
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are only, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [only]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, only
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are only, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [o, n, l, y]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, only
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are only, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, five
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are five, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [five]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, five
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are five, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [f, i, v, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, five
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are five, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, centuries,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are centuries,, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [centuries]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, centuries
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are centuries, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [c, e, n, t, u, r, i, e, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}]}, centuries,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are centuries,, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, ,]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [,]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, but
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are but, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [but]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, but
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are but, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [b, u, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, but
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are but, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, also
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are also, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [also]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, also
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are also, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a, l, s, o]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, also
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are also, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [the]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, leap
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are leap, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [leap]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, leap
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are leap, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, e, a, p]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, leap
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are leap, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, into
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are into, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [into]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, into
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are into, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, n, t, o]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, into
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are into, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, electronic
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are electronic, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [electronic]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, electronic
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are electronic, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [e, l, e, c, t, r, o, n, i, c]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, electronic
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are electronic, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, typesetting,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are typesetting,, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [typesetting]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, typesetting
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are typesetting, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, y, p, e, s, e, t, t, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}]}, typesetting,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are typesetting,, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, ,]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [,]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, remaining
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are remaining, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [remaining]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, remaining
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are remaining, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [r, e, m, a, i, n, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, remaining
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are remaining, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, essentially
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are essentially, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [essentially]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, essentially
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are essentially, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [e, s, s, e, n, t, i, a, l, l, y]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, essentially
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are essentially, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, unchanged.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are unchanged., WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [unchanged]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, unchanged
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are unchanged, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [u, n, c, h, a, n, g, e, d]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}]}, unchanged.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are unchanged., MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, .]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [.]
13:23:15 DEBUG LexemeParser handleSplit - started
13:23:15 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., LEXEME
13:23:15 DEBUG SplitServiceImpl split - return value is [It, was, popularised, in, the, with, the, release, of, Letraset, sheets, containing, Lorem, Ipsum, passages,, and, more, recently, withdesktop, publishing, software, like, Aldus, PageMaker, including, versions, of, Lorem, Ipsum.]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [It]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [I, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, was
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are was, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [was]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, was
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are was, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [w, a, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, was
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are was, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, popularised
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are popularised, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [popularised]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, popularised
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are popularised, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [p, o, p, u, l, a, r, i, s, e, d]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, popularised
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are popularised, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, in
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are in, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [in]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, in
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are in, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, n]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, in
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are in, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [the]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, with
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are with, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [with]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, with
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are with, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [w, i, t, h]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, with
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are with, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [the]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, release
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are release, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [release]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, release
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are release, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [r, e, l, e, a, s, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, release
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are release, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [of]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [o, f]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Letraset
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Letraset, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [Letraset]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Letraset
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Letraset, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [L, e, t, r, a, s, e, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, Letraset
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Letraset, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, sheets
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are sheets, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [sheets]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, sheets
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are sheets, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [s, h, e, e, t, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, sheets
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are sheets, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, containing
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are containing, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [containing]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, containing
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are containing, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [c, o, n, t, a, i, n, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, containing
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are containing, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Lorem
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Lorem, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [Lorem]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Lorem
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Lorem, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [L, o, r, e, m]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, Lorem
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Lorem, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, passages,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are passages,, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [passages]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, passages
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are passages, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [p, a, s, s, a, g, e, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}]}, passages,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are passages,, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, ,]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [,]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, and
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are and, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [and]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, and
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are and, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a, n, d]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, and
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are and, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, more
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are more, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [more]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, more
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are more, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [m, o, r, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, more
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are more, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, recently
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are recently, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [recently]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, recently
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are recently, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [r, e, c, e, n, t, l, y]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, recently
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are recently, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, withdesktop
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are withdesktop, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [withdesktop]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, withdesktop
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are withdesktop, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [w, i, t, h, d, e, s, k, t, o, p]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, withdesktop
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are withdesktop, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, publishing
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are publishing, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [publishing]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, publishing
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are publishing, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [p, u, b, l, i, s, h, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, publishing
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are publishing, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, software
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are software, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [software]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, software
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are software, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [s, o, f, t, w, a, r, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, software
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are software, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, like
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are like, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [like]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, like
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are like, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, i, k, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, like
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are like, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Aldus
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Aldus, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [Aldus]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Aldus
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Aldus, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [A, l, d, u, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, Aldus
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Aldus, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, PageMaker
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are PageMaker, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [PageMaker]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, PageMaker
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are PageMaker, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [P, a, g, e, M, a, k, e, r]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, PageMaker
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are PageMaker, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, including
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are including, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [including]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, including
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are including, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, n, c, l, u, d, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, including
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are including, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, versions
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are versions, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [versions]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, versions
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are versions, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [v, e, r, s, i, o, n, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, versions
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are versions, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [of]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [o, f]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Lorem
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Lorem, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [Lorem]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Lorem
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Lorem, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [L, o, r, e, m]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, Lorem
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Lorem, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum., WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum., MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, .]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [.]
13:23:15 DEBUG SentenceParser handleSplit - started
13:23:15 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., SENTENCE
13:23:15 DEBUG SplitServiceImpl split - return value is [It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout., The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.]
13:23:15 DEBUG LexemeParser handleSplit - started
13:23:15 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout., LEXEME
13:23:15 DEBUG SplitServiceImpl split - return value is [It, is, a, long, established, fact, that, a, reader, will, be, distracted, by, the, readable, content, of, a, page, when, looking, at, its, layout.]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [It]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [I, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [is]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, long
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are long, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [long]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, long
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are long, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, o, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, long
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are long, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, established
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are established, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [established]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, established
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are established, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [e, s, t, a, b, l, i, s, h, e, d]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, established
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are established, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, fact
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are fact, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [fact]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, fact
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are fact, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [f, a, c, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, fact
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are fact, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [that]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, reader
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are reader, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [reader]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, reader
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are reader, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [r, e, a, d, e, r]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, reader
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are reader, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, will
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are will, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [will]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, will
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are will, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [w, i, l, l]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, will
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are will, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, be
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are be, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [be]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, be
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are be, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [b, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, be
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are be, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, distracted
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are distracted, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [distracted]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, distracted
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are distracted, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [d, i, s, t, r, a, c, t, e, d]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, distracted
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are distracted, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, by
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are by, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [by]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, by
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are by, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [b, y]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, by
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are by, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [the]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are the, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, readable
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are readable, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [readable]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, readable
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are readable, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [r, e, a, d, a, b, l, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, readable
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are readable, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are content, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [content]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are content, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [c, o, n, t, e, n, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are content, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [of]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [o, f]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, page
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are page, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [page]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, page
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are page, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [p, a, g, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, page
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are page, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, when
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are when, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [when]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, when
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are when, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [w, h, e, n]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, when
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are when, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, looking
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are looking, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [looking]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, looking
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are looking, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, o, o, k, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, looking
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are looking, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, at
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are at, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [at]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, at
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are at, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, at
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are at, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, its
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are its, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [its]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, its
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are its, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, t, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, its
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are its, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, layout.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are layout., WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [layout]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, layout
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are layout, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, a, y, o, u, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}]}, layout.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are layout., MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, .]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [.]
13:23:15 DEBUG LexemeParser handleSplit - started
13:23:15 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., LEXEME
13:23:15 DEBUG SplitServiceImpl split - return value is [The, point, of, using, Ipsum, is, that, it, has, a, more-or-less, normal, distribution, of, letters,, as, opposed, to, using, 'Content, here,, content, here',, making, it, look, like, readable, English.]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, The
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are The, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [The]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, The
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are The, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [T, h, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, The
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are The, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, point
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are point, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [point]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, point
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are point, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [p, o, i, n, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, point
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are point, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [of]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [o, f]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, using
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are using, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [using]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, using
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are using, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [u, s, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, using
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are using, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Ipsum, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [is]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [that]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, it
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are it, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [it]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, it
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are it, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, it
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are it, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, has
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are has, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [has]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, has
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are has, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [h, a, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, has
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are has, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, more-or-less
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are more-or-less, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [more-or-less]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, more-or-less
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are more-or-less, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [m, o, r, e, -, o, r, -, l, e, s, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, more-or-less
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are more-or-less, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, normal
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are normal, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [normal]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, normal
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are normal, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [n, o, r, m, a, l]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, normal
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are normal, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, distribution
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are distribution, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [distribution]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, distribution
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are distribution, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [d, i, s, t, r, i, b, u, t, i, o, n]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, distribution
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are distribution, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [of]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [o, f]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, letters,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are letters,, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [letters]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, letters
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are letters, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, e, t, t, e, r, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}]}, letters,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are letters,, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, ,]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [,]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, as
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are as, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [as]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, as
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are as, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, as
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are as, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, opposed
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are opposed, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [opposed]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, opposed
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are opposed, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [o, p, p, o, s, e, d]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, opposed
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are opposed, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, to
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are to, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [to]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, to
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are to, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, o]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, to
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are to, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, using
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are using, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [using]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, using
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are using, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [u, s, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, using
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are using, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[]}, 'Content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are 'Content, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [']
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, '
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ', CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [']
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[{type=MARK, components=[{'}]}]}, 'Content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are 'Content, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [, Content]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, 
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are , CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Content, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [C, o, n, t, e, n, t]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, here,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are here,, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [here]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, here
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are here, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [h, e, r, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}]}, here,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are here,, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, ,]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [,]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are content, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [content]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are content, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [c, o, n, t, e, n, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, content
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are content, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, here',
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are here',, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [here]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, here
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are here, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [h, e, r, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}]}, here',
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are here',, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, ',]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ',
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ',, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [', ,]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, making
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are making, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [making]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, making
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are making, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [m, a, k, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, making
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are making, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, it
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are it, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [it]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, it
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are it, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, it
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are it, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, look
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are look, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [look]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, look
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are look, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, o, o, k]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, look
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are look, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, like
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are like, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [like]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, like
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are like, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, i, k, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, like
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are like, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, readable
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are readable, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [readable]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, readable
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are readable, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [r, e, a, d, a, b, l, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, readable
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are readable, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, English.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are English., WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [English]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, English
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are English, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [E, n, g, l, i, s, h]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}]}, English.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are English., MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, .]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [.]
13:23:15 DEBUG SentenceParser handleSplit - started
13:23:15 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It is a established fact that a reader will be of a page when looking at its layout.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It is a established fact that a reader will be of a page when looking at its layout., SENTENCE
13:23:15 DEBUG SplitServiceImpl split - return value is [It is a established fact that a reader will be of a page when looking at its layout.]
13:23:15 DEBUG LexemeParser handleSplit - started
13:23:15 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It is a established fact that a reader will be of a page when looking at its layout.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It is a established fact that a reader will be of a page when looking at its layout., LEXEME
13:23:15 DEBUG SplitServiceImpl split - return value is [It, is, a, established, fact, that, a, reader, will, be, of, a, page, when, looking, at, its, layout.]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [It]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [I, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are It, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [is]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are is, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, established
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are established, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [established]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, established
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are established, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [e, s, t, a, b, l, i, s, h, e, d]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, established
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are established, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, fact
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are fact, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [fact]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, fact
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are fact, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [f, a, c, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, fact
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are fact, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [that]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are that, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, reader
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are reader, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [reader]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, reader
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are reader, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [r, e, a, d, e, r]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, reader
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are reader, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, will
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are will, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [will]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, will
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are will, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [w, i, l, l]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, will
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are will, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, be
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are be, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [be]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, be
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are be, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [b, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, be
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are be, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [of]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [o, f]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are of, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are a, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, page
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are page, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [page]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, page
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are page, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [p, a, g, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, page
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are page, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, when
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are when, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [when]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, when
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are when, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [w, h, e, n]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, when
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are when, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, looking
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are looking, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [looking]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, looking
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are looking, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, o, o, k, i, n, g]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, looking
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are looking, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, at
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are at, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [at]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, at
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are at, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [a, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, at
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are at, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, its
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are its, WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [its]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, its
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are its, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [i, t, s]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, its
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are its, MARK
13:23:15 DEBUG SplitServiceImpl split - return value is []
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, layout.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are layout., WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [layout]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, layout
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are layout, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [l, a, y, o, u, t]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}]}, layout.
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are layout., MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, .]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [.]
13:23:15 DEBUG SentenceParser handleSplit - started
13:23:15 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Bye...
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Bye..., SENTENCE
13:23:15 DEBUG SplitServiceImpl split - return value is [Bye...]
13:23:15 DEBUG LexemeParser handleSplit - started
13:23:15 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Bye...
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Bye..., LEXEME
13:23:15 DEBUG SplitServiceImpl split - return value is [Bye...]
13:23:15 DEBUG WordParser handleSplit - started
13:23:15 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Bye...
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Bye..., WORD
13:23:15 DEBUG SplitServiceImpl split - return value is [Bye]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Bye
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Bye, CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [B, y, e]
13:23:15 DEBUG MarkParser handleSplit - started
13:23:15 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}]}, Bye...
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are Bye..., MARK
13:23:15 DEBUG SplitServiceImpl split - return value is [, ...]
13:23:15 DEBUG CharacterParser handleSplit - started
13:23:15 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ...
13:23:15 DEBUG SplitServiceImpl split - started
13:23:15 DEBUG SplitServiceImpl split - parameters are ..., CHARACTER
13:23:15 DEBUG SplitServiceImpl split - return value is [., ., .]
13:23:15 DEBUG TextDAOImpl addTextObject - started
13:23:15 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}
13:23:15 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}
13:23:15 DEBUG TextServiceImpl joinTree - started
13:23:15 DEBUG TextServiceImpl joinTree - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}
13:23:15 DEBUG TextServiceImpl joinTree - return value is It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye...
13:24:08 DEBUG TextServiceImpl createTree - started
13:24:08 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\test.txt
13:24:08 DEBUG TextDAOImpl readFile - started
13:24:08 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\test.txt
13:24:08 DEBUG TextDAOImpl readFile - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., It is a established fact that a reader will be of a page when looking at its layout., Bye...]
13:24:08 DEBUG ParagraphParser handleSplit - started
13:24:08 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye...
13:24:08 DEBUG SplitServiceImpl split - started
13:24:08 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye..., PARAGRAPH
13:24:08 DEBUG SplitServiceImpl split - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., It is a established fact that a reader will be of a page when looking at its layout., Bye...]
13:24:08 DEBUG SentenceParser handleSplit - started
13:24:08 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
13:24:08 DEBUG SplitServiceImpl split - started
13:24:08 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., SENTENCE
13:24:08 DEBUG SplitServiceImpl split - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged., It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.]
13:24:08 DEBUG LexemeParser handleSplit - started
13:24:08 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.
13:24:08 DEBUG SplitServiceImpl split - started
13:24:08 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged., LEXEME
13:24:08 DEBUG SplitServiceImpl split - return value is [It, has, survived, not, only, five, centuries,, but, also, the, leap, into, electronic, typesetting,, remaining, essentially, unchanged.]
13:24:08 DEBUG WordParser handleSplit - started
13:24:08 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:24:08 DEBUG SplitServiceImpl split - started
13:24:08 DEBUG SplitServiceImpl split - parameters are It, WORD
13:24:08 DEBUG SplitServiceImpl split - return value is [It]
13:24:08 DEBUG CharacterParser handleSplit - started
13:24:08 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:24:08 DEBUG SplitServiceImpl split - started
13:24:08 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:24:08 DEBUG SplitServiceImpl split - return value is [I, t]
13:24:08 DEBUG MarkParser handleSplit - started
13:24:08 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:24:08 DEBUG SplitServiceImpl split - started
13:24:08 DEBUG SplitServiceImpl split - parameters are It, MARK
13:24:08 DEBUG SplitServiceImpl split - return value is []
13:24:08 DEBUG WordParser handleSplit - started
13:24:08 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, has
13:24:08 DEBUG SplitServiceImpl split - started
13:24:08 DEBUG SplitServiceImpl split - parameters are has, WORD
13:24:08 DEBUG SplitServiceImpl split - return value is [has]
13:24:08 DEBUG CharacterParser handleSplit - started
13:24:08 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, has
13:24:08 DEBUG SplitServiceImpl split - started
13:24:08 DEBUG SplitServiceImpl split - parameters are has, CHARACTER
13:24:08 DEBUG SplitServiceImpl split - return value is [h, a, s]
13:24:08 DEBUG MarkParser handleSplit - started
13:24:08 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, has
13:24:08 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are has, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, survived
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are survived, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [survived]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, survived
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are survived, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [s, u, r, v, i, v, e, d]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, survived
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are survived, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, not
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are not, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [not]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, not
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are not, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [n, o, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, not
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are not, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, only
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are only, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [only]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, only
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are only, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [o, n, l, y]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, only
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are only, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, five
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are five, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [five]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, five
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are five, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [f, i, v, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, five
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are five, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, centuries,
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are centuries,, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [centuries]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, centuries
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are centuries, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [c, e, n, t, u, r, i, e, s]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}]}, centuries,
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are centuries,, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [,]
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, but
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are but, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [but]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, but
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are but, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [b, u, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, but
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are but, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, also
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are also, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [also]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, also
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are also, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [a, l, s, o]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, also
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are also, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are the, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [the]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are the, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, leap
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are leap, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [leap]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, leap
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are leap, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [l, e, a, p]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, leap
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are leap, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, into
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are into, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [into]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, into
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are into, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [i, n, t, o]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, into
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are into, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, electronic
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are electronic, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [electronic]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, electronic
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are electronic, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [e, l, e, c, t, r, o, n, i, c]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, electronic
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are electronic, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, typesetting,
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are typesetting,, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [typesetting]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, typesetting
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are typesetting, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [t, y, p, e, s, e, t, t, i, n, g]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}]}, typesetting,
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are typesetting,, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [,]
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, remaining
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are remaining, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [remaining]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, remaining
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are remaining, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [r, e, m, a, i, n, i, n, g]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, remaining
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are remaining, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, essentially
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are essentially, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [essentially]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, essentially
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are essentially, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [e, s, s, e, n, t, i, a, l, l, y]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, essentially
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are essentially, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, unchanged.
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are unchanged., WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [unchanged]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, unchanged
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are unchanged, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [u, n, c, h, a, n, g, e, d]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}]}, unchanged.
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are unchanged., MARK
13:24:09 DEBUG SplitServiceImpl split - return value is [, .]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [.]
13:24:09 DEBUG LexemeParser handleSplit - started
13:24:09 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., LEXEME
13:24:09 DEBUG SplitServiceImpl split - return value is [It, was, popularised, in, the, with, the, release, of, Letraset, sheets, containing, Lorem, Ipsum, passages,, and, more, recently, withdesktop, publishing, software, like, Aldus, PageMaker, including, versions, of, Lorem, Ipsum.]
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are It, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [It]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [I, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are It, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, was
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are was, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [was]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, was
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are was, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [w, a, s]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, was
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are was, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, popularised
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are popularised, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [popularised]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, popularised
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are popularised, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [p, o, p, u, l, a, r, i, s, e, d]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, popularised
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are popularised, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, in
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are in, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [in]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, in
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are in, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [i, n]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, in
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are in, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are the, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [the]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are the, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, with
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are with, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [with]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, with
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are with, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [w, i, t, h]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, with
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are with, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are the, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [the]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are the, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, release
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are release, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [release]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, release
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are release, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [r, e, l, e, a, s, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, release
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are release, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [of]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Letraset
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Letraset, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [Letraset]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Letraset
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Letraset, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [L, e, t, r, a, s, e, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, Letraset
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Letraset, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, sheets
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are sheets, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [sheets]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, sheets
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are sheets, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [s, h, e, e, t, s]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, sheets
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are sheets, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, containing
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are containing, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [containing]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, containing
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are containing, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [c, o, n, t, a, i, n, i, n, g]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, containing
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are containing, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Lorem
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Lorem, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [Lorem]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Lorem
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Lorem, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [L, o, r, e, m]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, Lorem
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Lorem, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Ipsum, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Ipsum, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, passages,
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are passages,, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [passages]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, passages
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are passages, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [p, a, s, s, a, g, e, s]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}]}, passages,
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are passages,, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [,]
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, and
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are and, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [and]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, and
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are and, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [a, n, d]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, and
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are and, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, more
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are more, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [more]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, more
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are more, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [m, o, r, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, more
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are more, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, recently
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are recently, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [recently]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, recently
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are recently, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [r, e, c, e, n, t, l, y]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, recently
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are recently, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, withdesktop
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are withdesktop, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [withdesktop]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, withdesktop
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are withdesktop, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [w, i, t, h, d, e, s, k, t, o, p]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, withdesktop
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are withdesktop, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, publishing
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are publishing, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [publishing]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, publishing
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are publishing, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [p, u, b, l, i, s, h, i, n, g]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, publishing
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are publishing, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, software
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are software, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [software]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, software
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are software, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [s, o, f, t, w, a, r, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, software
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are software, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, like
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are like, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [like]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, like
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are like, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [l, i, k, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, like
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are like, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Aldus
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Aldus, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [Aldus]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Aldus
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Aldus, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [A, l, d, u, s]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, Aldus
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Aldus, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, PageMaker
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are PageMaker, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [PageMaker]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, PageMaker
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are PageMaker, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [P, a, g, e, M, a, k, e, r]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, PageMaker
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are PageMaker, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, including
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are including, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [including]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, including
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are including, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [i, n, c, l, u, d, i, n, g]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, including
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are including, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, versions
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are versions, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [versions]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, versions
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are versions, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [v, e, r, s, i, o, n, s]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, versions
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are versions, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [of]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Lorem
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Lorem, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [Lorem]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Lorem
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Lorem, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [L, o, r, e, m]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, Lorem
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Lorem, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum.
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Ipsum., WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum.
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Ipsum., MARK
13:24:09 DEBUG SplitServiceImpl split - return value is [, .]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [.]
13:24:09 DEBUG SentenceParser handleSplit - started
13:24:09 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., SENTENCE
13:24:09 DEBUG SplitServiceImpl split - return value is [It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout., The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.]
13:24:09 DEBUG LexemeParser handleSplit - started
13:24:09 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout., LEXEME
13:24:09 DEBUG SplitServiceImpl split - return value is [It, is, a, long, established, fact, that, a, reader, will, be, distracted, by, the, readable, content, of, a, page, when, looking, at, its, layout.]
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are It, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [It]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [I, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are It, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are is, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [is]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [i, s]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are is, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [a]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [a]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, long
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are long, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [long]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, long
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are long, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [l, o, n, g]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, long
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are long, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, established
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are established, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [established]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, established
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are established, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [e, s, t, a, b, l, i, s, h, e, d]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, established
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are established, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, fact
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are fact, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [fact]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, fact
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are fact, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [f, a, c, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, fact
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are fact, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are that, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [that]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are that, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [a]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [a]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, reader
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are reader, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [reader]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, reader
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are reader, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [r, e, a, d, e, r]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, reader
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are reader, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, will
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are will, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [will]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, will
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are will, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [w, i, l, l]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, will
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are will, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, be
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are be, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [be]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, be
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are be, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [b, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, be
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are be, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, distracted
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are distracted, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [distracted]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, distracted
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are distracted, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [d, i, s, t, r, a, c, t, e, d]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, distracted
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are distracted, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, by
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are by, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [by]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, by
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are by, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [b, y]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, by
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are by, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are the, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [the]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are the, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, readable
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are readable, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [readable]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, readable
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are readable, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [r, e, a, d, a, b, l, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, readable
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are readable, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, content
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are content, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [content]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, content
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are content, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [c, o, n, t, e, n, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, content
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are content, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [of]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [a]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [a]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, page
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are page, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [page]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, page
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are page, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [p, a, g, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, page
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are page, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, when
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are when, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [when]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, when
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are when, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [w, h, e, n]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, when
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are when, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, looking
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are looking, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [looking]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, looking
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are looking, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [l, o, o, k, i, n, g]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, looking
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are looking, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, at
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are at, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [at]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, at
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are at, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [a, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, at
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are at, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, its
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are its, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [its]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, its
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are its, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [i, t, s]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, its
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are its, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, layout.
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are layout., WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [layout]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, layout
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are layout, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [l, a, y, o, u, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}]}, layout.
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are layout., MARK
13:24:09 DEBUG SplitServiceImpl split - return value is [, .]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [.]
13:24:09 DEBUG LexemeParser handleSplit - started
13:24:09 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., LEXEME
13:24:09 DEBUG SplitServiceImpl split - return value is [The, point, of, using, Ipsum, is, that, it, has, a, more-or-less, normal, distribution, of, letters,, as, opposed, to, using, 'Content, here,, content, here',, making, it, look, like, readable, English.]
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, The
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are The, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [The]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, The
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are The, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [T, h, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, The
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are The, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, point
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are point, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [point]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, point
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are point, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [p, o, i, n, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, point
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are point, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [of]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, using
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are using, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [using]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, using
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are using, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [u, s, i, n, g]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, using
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are using, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Ipsum, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Ipsum, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are is, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [is]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [i, s]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are is, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are that, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [that]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are that, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, it
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are it, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [it]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, it
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are it, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [i, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, it
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are it, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, has
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are has, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [has]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, has
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are has, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [h, a, s]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, has
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are has, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [a]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [a]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, more-or-less
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are more-or-less, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [more-or-less]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, more-or-less
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are more-or-less, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [m, o, r, e, -, o, r, -, l, e, s, s]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, more-or-less
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are more-or-less, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, normal
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are normal, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [normal]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, normal
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are normal, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [n, o, r, m, a, l]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, normal
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are normal, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, distribution
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are distribution, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [distribution]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, distribution
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are distribution, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [d, i, s, t, r, i, b, u, t, i, o, n]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, distribution
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are distribution, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [of]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, letters,
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are letters,, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [letters]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, letters
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are letters, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [l, e, t, t, e, r, s]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}]}, letters,
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are letters,, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [,]
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, as
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are as, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [as]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, as
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are as, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [a, s]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, as
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are as, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, opposed
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are opposed, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [opposed]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, opposed
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are opposed, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [o, p, p, o, s, e, d]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, opposed
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are opposed, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, to
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are to, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [to]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, to
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are to, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [t, o]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, to
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are to, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, using
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are using, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [using]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, using
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are using, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [u, s, i, n, g]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, using
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are using, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[]}, 'Content
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are 'Content, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is [']
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, '
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are ', CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [']
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[{type=MARK, components=[{'}]}]}, 'Content
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are 'Content, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [, Content]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, 
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are , CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Content
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Content, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [C, o, n, t, e, n, t]
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, here,
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are here,, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [here]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, here
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are here, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [h, e, r, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}]}, here,
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are here,, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [,]
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, content
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are content, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [content]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, content
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are content, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [c, o, n, t, e, n, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, content
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are content, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, here',
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are here',, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [here]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, here
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are here, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [h, e, r, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}]}, here',
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are here',, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is [, ',]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ',
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are ',, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [', ,]
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, making
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are making, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [making]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, making
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are making, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [m, a, k, i, n, g]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, making
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are making, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, it
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are it, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [it]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, it
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are it, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [i, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, it
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are it, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, look
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are look, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [look]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, look
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are look, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [l, o, o, k]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, look
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are look, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, like
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are like, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [like]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, like
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are like, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [l, i, k, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, like
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are like, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, readable
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are readable, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [readable]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, readable
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are readable, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [r, e, a, d, a, b, l, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, readable
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are readable, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, English.
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are English., WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [English]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, English
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are English, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [E, n, g, l, i, s, h]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}]}, English.
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are English., MARK
13:24:09 DEBUG SplitServiceImpl split - return value is [, .]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [.]
13:24:09 DEBUG SentenceParser handleSplit - started
13:24:09 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It is a established fact that a reader will be of a page when looking at its layout.
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are It is a established fact that a reader will be of a page when looking at its layout., SENTENCE
13:24:09 DEBUG SplitServiceImpl split - return value is [It is a established fact that a reader will be of a page when looking at its layout.]
13:24:09 DEBUG LexemeParser handleSplit - started
13:24:09 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It is a established fact that a reader will be of a page when looking at its layout.
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are It is a established fact that a reader will be of a page when looking at its layout., LEXEME
13:24:09 DEBUG SplitServiceImpl split - return value is [It, is, a, established, fact, that, a, reader, will, be, of, a, page, when, looking, at, its, layout.]
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are It, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [It]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [I, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are It, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are is, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [is]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [i, s]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are is, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [a]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [a]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, established
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are established, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [established]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, established
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are established, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [e, s, t, a, b, l, i, s, h, e, d]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, established
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are established, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, fact
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are fact, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [fact]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, fact
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are fact, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [f, a, c, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, fact
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are fact, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are that, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [that]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are that, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [a]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [a]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, reader
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are reader, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [reader]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, reader
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are reader, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [r, e, a, d, e, r]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, reader
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are reader, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, will
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are will, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [will]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, will
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are will, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [w, i, l, l]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, will
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are will, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, be
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are be, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [be]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, be
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are be, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [b, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, be
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are be, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [of]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [a]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [a]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, page
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are page, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [page]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, page
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are page, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [p, a, g, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, page
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are page, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, when
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are when, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [when]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, when
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are when, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [w, h, e, n]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, when
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are when, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, looking
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are looking, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [looking]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, looking
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are looking, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [l, o, o, k, i, n, g]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, looking
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are looking, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, at
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are at, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [at]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, at
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are at, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [a, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, at
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are at, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, its
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are its, WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [its]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, its
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are its, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [i, t, s]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, its
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are its, MARK
13:24:09 DEBUG SplitServiceImpl split - return value is []
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, layout.
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are layout., WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [layout]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, layout
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are layout, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [l, a, y, o, u, t]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}]}, layout.
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are layout., MARK
13:24:09 DEBUG SplitServiceImpl split - return value is [, .]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [.]
13:24:09 DEBUG SentenceParser handleSplit - started
13:24:09 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Bye...
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Bye..., SENTENCE
13:24:09 DEBUG SplitServiceImpl split - return value is [Bye...]
13:24:09 DEBUG LexemeParser handleSplit - started
13:24:09 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Bye...
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Bye..., LEXEME
13:24:09 DEBUG SplitServiceImpl split - return value is [Bye...]
13:24:09 DEBUG WordParser handleSplit - started
13:24:09 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Bye...
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Bye..., WORD
13:24:09 DEBUG SplitServiceImpl split - return value is [Bye]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Bye
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Bye, CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [B, y, e]
13:24:09 DEBUG MarkParser handleSplit - started
13:24:09 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}]}, Bye...
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are Bye..., MARK
13:24:09 DEBUG SplitServiceImpl split - return value is [, ...]
13:24:09 DEBUG CharacterParser handleSplit - started
13:24:09 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ...
13:24:09 DEBUG SplitServiceImpl split - started
13:24:09 DEBUG SplitServiceImpl split - parameters are ..., CHARACTER
13:24:09 DEBUG SplitServiceImpl split - return value is [., ., .]
13:24:09 DEBUG TextDAOImpl addTextObject - started
13:24:09 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}
13:24:09 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}
13:24:09 DEBUG TextServiceImpl receiveTextCollection - started
13:24:09 DEBUG TextDAOImpl receiveTextCollection - started
13:24:09 DEBUG TextDAOImpl receiveTextCollection - return value is {0={type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}}
13:24:09 DEBUG TextServiceImpl receiveTextCollection - return value is {0={type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}}
13:24:22 DEBUG TextServiceImpl createTree - started
13:24:22 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\test.txt
13:24:22 DEBUG TextDAOImpl readFile - started
13:24:22 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\test.txt
13:24:22 DEBUG TextDAOImpl readFile - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., It is a established fact that a reader will be of a page when looking at its layout., Bye...]
13:24:22 DEBUG ParagraphParser handleSplit - started
13:24:22 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye...
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye..., PARAGRAPH
13:24:22 DEBUG SplitServiceImpl split - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., It is a established fact that a reader will be of a page when looking at its layout., Bye...]
13:24:22 DEBUG SentenceParser handleSplit - started
13:24:22 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., SENTENCE
13:24:22 DEBUG SplitServiceImpl split - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged., It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.]
13:24:22 DEBUG LexemeParser handleSplit - started
13:24:22 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged., LEXEME
13:24:22 DEBUG SplitServiceImpl split - return value is [It, has, survived, not, only, five, centuries,, but, also, the, leap, into, electronic, typesetting,, remaining, essentially, unchanged.]
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [It]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [I, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, has
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are has, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [has]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, has
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are has, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [h, a, s]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, has
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are has, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, survived
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are survived, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [survived]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, survived
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are survived, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [s, u, r, v, i, v, e, d]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, survived
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are survived, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, not
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are not, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [not]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, not
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are not, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [n, o, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, not
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are not, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, only
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are only, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [only]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, only
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are only, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [o, n, l, y]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, only
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are only, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, five
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are five, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [five]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, five
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are five, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [f, i, v, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, five
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are five, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, centuries,
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are centuries,, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [centuries]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, centuries
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are centuries, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [c, e, n, t, u, r, i, e, s]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}]}, centuries,
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are centuries,, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [,]
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, but
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are but, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [but]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, but
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are but, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [b, u, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, but
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are but, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, also
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are also, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [also]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, also
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are also, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [a, l, s, o]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, also
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are also, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are the, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [the]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are the, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, leap
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are leap, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [leap]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, leap
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are leap, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [l, e, a, p]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, leap
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are leap, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, into
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are into, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [into]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, into
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are into, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [i, n, t, o]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, into
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are into, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, electronic
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are electronic, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [electronic]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, electronic
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are electronic, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [e, l, e, c, t, r, o, n, i, c]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, electronic
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are electronic, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, typesetting,
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are typesetting,, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [typesetting]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, typesetting
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are typesetting, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [t, y, p, e, s, e, t, t, i, n, g]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}]}, typesetting,
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are typesetting,, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [,]
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, remaining
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are remaining, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [remaining]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, remaining
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are remaining, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [r, e, m, a, i, n, i, n, g]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, remaining
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are remaining, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, essentially
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are essentially, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [essentially]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, essentially
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are essentially, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [e, s, s, e, n, t, i, a, l, l, y]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, essentially
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are essentially, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, unchanged.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are unchanged., WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [unchanged]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, unchanged
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are unchanged, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [u, n, c, h, a, n, g, e, d]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}]}, unchanged.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are unchanged., MARK
13:24:22 DEBUG SplitServiceImpl split - return value is [, .]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [.]
13:24:22 DEBUG LexemeParser handleSplit - started
13:24:22 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., LEXEME
13:24:22 DEBUG SplitServiceImpl split - return value is [It, was, popularised, in, the, with, the, release, of, Letraset, sheets, containing, Lorem, Ipsum, passages,, and, more, recently, withdesktop, publishing, software, like, Aldus, PageMaker, including, versions, of, Lorem, Ipsum.]
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [It]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [I, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, was
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are was, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [was]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, was
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are was, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [w, a, s]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, was
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are was, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, popularised
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are popularised, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [popularised]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, popularised
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are popularised, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [p, o, p, u, l, a, r, i, s, e, d]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, popularised
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are popularised, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, in
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are in, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [in]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, in
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are in, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [i, n]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, in
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are in, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are the, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [the]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are the, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, with
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are with, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [with]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, with
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are with, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [w, i, t, h]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, with
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are with, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are the, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [the]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are the, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, release
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are release, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [release]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, release
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are release, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [r, e, l, e, a, s, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, release
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are release, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [of]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Letraset
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Letraset, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [Letraset]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Letraset
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Letraset, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [L, e, t, r, a, s, e, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, Letraset
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Letraset, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, sheets
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are sheets, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [sheets]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, sheets
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are sheets, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [s, h, e, e, t, s]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, sheets
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are sheets, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, containing
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are containing, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [containing]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, containing
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are containing, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [c, o, n, t, a, i, n, i, n, g]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, containing
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are containing, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Lorem
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Lorem, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [Lorem]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Lorem
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Lorem, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [L, o, r, e, m]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, Lorem
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Lorem, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Ipsum, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Ipsum, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, passages,
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are passages,, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [passages]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, passages
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are passages, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [p, a, s, s, a, g, e, s]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}]}, passages,
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are passages,, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [,]
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, and
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are and, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [and]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, and
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are and, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [a, n, d]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, and
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are and, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, more
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are more, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [more]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, more
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are more, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [m, o, r, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, more
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are more, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, recently
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are recently, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [recently]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, recently
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are recently, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [r, e, c, e, n, t, l, y]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, recently
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are recently, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, withdesktop
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are withdesktop, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [withdesktop]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, withdesktop
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are withdesktop, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [w, i, t, h, d, e, s, k, t, o, p]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, withdesktop
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are withdesktop, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, publishing
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are publishing, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [publishing]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, publishing
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are publishing, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [p, u, b, l, i, s, h, i, n, g]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, publishing
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are publishing, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, software
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are software, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [software]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, software
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are software, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [s, o, f, t, w, a, r, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, software
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are software, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, like
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are like, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [like]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, like
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are like, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [l, i, k, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, like
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are like, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Aldus
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Aldus, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [Aldus]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Aldus
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Aldus, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [A, l, d, u, s]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, Aldus
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Aldus, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, PageMaker
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are PageMaker, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [PageMaker]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, PageMaker
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are PageMaker, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [P, a, g, e, M, a, k, e, r]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, PageMaker
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are PageMaker, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, including
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are including, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [including]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, including
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are including, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [i, n, c, l, u, d, i, n, g]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, including
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are including, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, versions
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are versions, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [versions]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, versions
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are versions, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [v, e, r, s, i, o, n, s]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, versions
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are versions, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [of]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Lorem
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Lorem, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [Lorem]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Lorem
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Lorem, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [L, o, r, e, m]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, Lorem
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Lorem, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Ipsum., WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Ipsum., MARK
13:24:22 DEBUG SplitServiceImpl split - return value is [, .]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [.]
13:24:22 DEBUG SentenceParser handleSplit - started
13:24:22 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., SENTENCE
13:24:22 DEBUG SplitServiceImpl split - return value is [It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout., The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.]
13:24:22 DEBUG LexemeParser handleSplit - started
13:24:22 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout., LEXEME
13:24:22 DEBUG SplitServiceImpl split - return value is [It, is, a, long, established, fact, that, a, reader, will, be, distracted, by, the, readable, content, of, a, page, when, looking, at, its, layout.]
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [It]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [I, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are is, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [is]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [i, s]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are is, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [a]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [a]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, long
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are long, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [long]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, long
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are long, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [l, o, n, g]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, long
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are long, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, established
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are established, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [established]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, established
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are established, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [e, s, t, a, b, l, i, s, h, e, d]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, established
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are established, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, fact
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are fact, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [fact]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, fact
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are fact, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [f, a, c, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, fact
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are fact, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are that, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [that]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are that, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [a]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [a]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, reader
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are reader, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [reader]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, reader
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are reader, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [r, e, a, d, e, r]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, reader
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are reader, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, will
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are will, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [will]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, will
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are will, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [w, i, l, l]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, will
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are will, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, be
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are be, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [be]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, be
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are be, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [b, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, be
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are be, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, distracted
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are distracted, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [distracted]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, distracted
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are distracted, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [d, i, s, t, r, a, c, t, e, d]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, distracted
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are distracted, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, by
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are by, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [by]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, by
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are by, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [b, y]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, by
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are by, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are the, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [the]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are the, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, readable
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are readable, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [readable]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, readable
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are readable, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [r, e, a, d, a, b, l, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, readable
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are readable, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, content
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are content, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [content]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, content
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are content, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [c, o, n, t, e, n, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, content
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are content, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [of]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [a]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [a]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, page
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are page, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [page]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, page
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are page, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [p, a, g, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, page
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are page, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, when
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are when, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [when]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, when
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are when, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [w, h, e, n]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, when
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are when, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, looking
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are looking, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [looking]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, looking
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are looking, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [l, o, o, k, i, n, g]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, looking
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are looking, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, at
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are at, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [at]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, at
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are at, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [a, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, at
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are at, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, its
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are its, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [its]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, its
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are its, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [i, t, s]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, its
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are its, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, layout.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are layout., WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [layout]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, layout
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are layout, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [l, a, y, o, u, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}]}, layout.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are layout., MARK
13:24:22 DEBUG SplitServiceImpl split - return value is [, .]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [.]
13:24:22 DEBUG LexemeParser handleSplit - started
13:24:22 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., LEXEME
13:24:22 DEBUG SplitServiceImpl split - return value is [The, point, of, using, Ipsum, is, that, it, has, a, more-or-less, normal, distribution, of, letters,, as, opposed, to, using, 'Content, here,, content, here',, making, it, look, like, readable, English.]
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, The
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are The, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [The]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, The
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are The, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [T, h, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, The
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are The, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, point
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are point, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [point]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, point
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are point, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [p, o, i, n, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, point
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are point, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [of]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, using
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are using, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [using]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, using
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are using, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [u, s, i, n, g]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, using
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are using, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Ipsum, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Ipsum, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are is, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [is]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [i, s]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are is, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are that, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [that]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are that, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, it
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are it, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [it]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, it
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are it, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [i, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, it
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are it, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, has
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are has, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [has]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, has
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are has, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [h, a, s]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, has
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are has, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [a]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [a]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, more-or-less
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are more-or-less, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [more-or-less]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, more-or-less
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are more-or-less, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [m, o, r, e, -, o, r, -, l, e, s, s]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, more-or-less
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are more-or-less, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, normal
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are normal, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [normal]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, normal
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are normal, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [n, o, r, m, a, l]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, normal
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are normal, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, distribution
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are distribution, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [distribution]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, distribution
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are distribution, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [d, i, s, t, r, i, b, u, t, i, o, n]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, distribution
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are distribution, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [of]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, letters,
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are letters,, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [letters]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, letters
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are letters, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [l, e, t, t, e, r, s]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}]}, letters,
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are letters,, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [,]
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, as
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are as, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [as]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, as
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are as, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [a, s]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, as
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are as, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, opposed
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are opposed, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [opposed]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, opposed
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are opposed, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [o, p, p, o, s, e, d]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, opposed
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are opposed, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, to
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are to, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [to]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, to
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are to, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [t, o]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, to
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are to, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, using
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are using, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [using]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, using
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are using, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [u, s, i, n, g]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, using
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are using, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[]}, 'Content
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are 'Content, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is [']
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, '
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are ', CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [']
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[{type=MARK, components=[{'}]}]}, 'Content
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are 'Content, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [, Content]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, 
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are , CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Content
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Content, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [C, o, n, t, e, n, t]
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, here,
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are here,, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [here]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, here
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are here, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [h, e, r, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}]}, here,
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are here,, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [,]
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, content
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are content, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [content]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, content
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are content, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [c, o, n, t, e, n, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, content
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are content, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, here',
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are here',, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [here]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, here
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are here, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [h, e, r, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}]}, here',
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are here',, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is [, ',]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ',
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are ',, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [', ,]
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, making
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are making, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [making]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, making
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are making, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [m, a, k, i, n, g]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, making
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are making, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, it
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are it, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [it]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, it
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are it, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [i, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, it
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are it, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, look
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are look, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [look]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, look
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are look, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [l, o, o, k]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, look
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are look, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, like
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are like, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [like]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, like
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are like, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [l, i, k, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, like
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are like, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, readable
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are readable, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [readable]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, readable
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are readable, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [r, e, a, d, a, b, l, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, readable
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are readable, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, English.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are English., WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [English]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, English
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are English, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [E, n, g, l, i, s, h]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}]}, English.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are English., MARK
13:24:22 DEBUG SplitServiceImpl split - return value is [, .]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [.]
13:24:22 DEBUG SentenceParser handleSplit - started
13:24:22 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It is a established fact that a reader will be of a page when looking at its layout.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It is a established fact that a reader will be of a page when looking at its layout., SENTENCE
13:24:22 DEBUG SplitServiceImpl split - return value is [It is a established fact that a reader will be of a page when looking at its layout.]
13:24:22 DEBUG LexemeParser handleSplit - started
13:24:22 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It is a established fact that a reader will be of a page when looking at its layout.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It is a established fact that a reader will be of a page when looking at its layout., LEXEME
13:24:22 DEBUG SplitServiceImpl split - return value is [It, is, a, established, fact, that, a, reader, will, be, of, a, page, when, looking, at, its, layout.]
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [It]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [I, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are It, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are is, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [is]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [i, s]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are is, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [a]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [a]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, established
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are established, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [established]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, established
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are established, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [e, s, t, a, b, l, i, s, h, e, d]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, established
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are established, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, fact
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are fact, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [fact]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, fact
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are fact, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [f, a, c, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, fact
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are fact, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are that, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [that]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are that, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [a]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [a]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, reader
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are reader, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [reader]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, reader
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are reader, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [r, e, a, d, e, r]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, reader
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are reader, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, will
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are will, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [will]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, will
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are will, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [w, i, l, l]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, will
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are will, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, be
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are be, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [be]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, be
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are be, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [b, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, be
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are be, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [of]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [a]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [a]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, page
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are page, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [page]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, page
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are page, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [p, a, g, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, page
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are page, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, when
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are when, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [when]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, when
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are when, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [w, h, e, n]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, when
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are when, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, looking
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are looking, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [looking]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, looking
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are looking, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [l, o, o, k, i, n, g]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, looking
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are looking, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, at
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are at, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [at]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, at
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are at, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [a, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, at
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are at, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, its
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are its, WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [its]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, its
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are its, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [i, t, s]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, its
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are its, MARK
13:24:22 DEBUG SplitServiceImpl split - return value is []
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, layout.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are layout., WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [layout]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, layout
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are layout, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [l, a, y, o, u, t]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}]}, layout.
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are layout., MARK
13:24:22 DEBUG SplitServiceImpl split - return value is [, .]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [.]
13:24:22 DEBUG SentenceParser handleSplit - started
13:24:22 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Bye...
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Bye..., SENTENCE
13:24:22 DEBUG SplitServiceImpl split - return value is [Bye...]
13:24:22 DEBUG LexemeParser handleSplit - started
13:24:22 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Bye...
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Bye..., LEXEME
13:24:22 DEBUG SplitServiceImpl split - return value is [Bye...]
13:24:22 DEBUG WordParser handleSplit - started
13:24:22 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Bye...
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Bye..., WORD
13:24:22 DEBUG SplitServiceImpl split - return value is [Bye]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Bye
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Bye, CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [B, y, e]
13:24:22 DEBUG MarkParser handleSplit - started
13:24:22 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}]}, Bye...
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are Bye..., MARK
13:24:22 DEBUG SplitServiceImpl split - return value is [, ...]
13:24:22 DEBUG CharacterParser handleSplit - started
13:24:22 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ...
13:24:22 DEBUG SplitServiceImpl split - started
13:24:22 DEBUG SplitServiceImpl split - parameters are ..., CHARACTER
13:24:22 DEBUG SplitServiceImpl split - return value is [., ., .]
13:24:22 DEBUG TextDAOImpl addTextObject - started
13:24:22 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}
13:24:22 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}
13:24:22 DEBUG TextServiceImpl receiveTextCollection - started
13:24:22 DEBUG TextDAOImpl receiveTextCollection - started
13:24:22 DEBUG TextDAOImpl receiveTextCollection - return value is {0={type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}}
13:24:22 DEBUG TextServiceImpl receiveTextCollection - return value is {0={type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}}
13:24:29 DEBUG TextServiceImpl createTree - started
13:24:29 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\another-test.txt
13:24:29 DEBUG TextDAOImpl readFile - started
13:24:29 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\another-test.txt
13:24:29 DEBUG TextDAOImpl readFile - return value is [One!, One, two.]
13:24:29 DEBUG ParagraphParser handleSplit - started
13:24:29 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, One!
One, two.
13:24:29 DEBUG SplitServiceImpl split - started
13:24:29 DEBUG SplitServiceImpl split - parameters are One!
One, two., PARAGRAPH
13:24:29 DEBUG SplitServiceImpl split - return value is [One!, One, two.]
13:24:29 DEBUG SentenceParser handleSplit - started
13:24:29 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, One!
13:24:29 DEBUG SplitServiceImpl split - started
13:24:29 DEBUG SplitServiceImpl split - parameters are One!, SENTENCE
13:24:29 DEBUG SplitServiceImpl split - return value is [One!]
13:24:29 DEBUG LexemeParser handleSplit - started
13:24:29 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, One!
13:24:29 DEBUG SplitServiceImpl split - started
13:24:29 DEBUG SplitServiceImpl split - parameters are One!, LEXEME
13:24:29 DEBUG SplitServiceImpl split - return value is [One!]
13:24:29 DEBUG WordParser handleSplit - started
13:24:29 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, One!
13:24:29 DEBUG SplitServiceImpl split - started
13:24:29 DEBUG SplitServiceImpl split - parameters are One!, WORD
13:24:29 DEBUG SplitServiceImpl split - return value is [One]
13:24:29 DEBUG CharacterParser handleSplit - started
13:24:29 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, One
13:24:29 DEBUG SplitServiceImpl split - started
13:24:29 DEBUG SplitServiceImpl split - parameters are One, CHARACTER
13:24:29 DEBUG SplitServiceImpl split - return value is [O, n, e]
13:24:29 DEBUG MarkParser handleSplit - started
13:24:29 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}]}, One!
13:24:29 DEBUG SplitServiceImpl split - started
13:24:29 DEBUG SplitServiceImpl split - parameters are One!, MARK
13:24:29 DEBUG SplitServiceImpl split - return value is [, !]
13:24:29 DEBUG CharacterParser handleSplit - started
13:24:29 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, !
13:24:29 DEBUG SplitServiceImpl split - started
13:24:29 DEBUG SplitServiceImpl split - parameters are !, CHARACTER
13:24:29 DEBUG SplitServiceImpl split - return value is [!]
13:24:29 DEBUG SentenceParser handleSplit - started
13:24:29 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, One, two.
13:24:29 DEBUG SplitServiceImpl split - started
13:24:29 DEBUG SplitServiceImpl split - parameters are One, two., SENTENCE
13:24:29 DEBUG SplitServiceImpl split - return value is [One, two.]
13:24:29 DEBUG LexemeParser handleSplit - started
13:24:29 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, One, two.
13:24:29 DEBUG SplitServiceImpl split - started
13:24:29 DEBUG SplitServiceImpl split - parameters are One, two., LEXEME
13:24:29 DEBUG SplitServiceImpl split - return value is [One,, two.]
13:24:29 DEBUG WordParser handleSplit - started
13:24:29 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, One,
13:24:29 DEBUG SplitServiceImpl split - started
13:24:29 DEBUG SplitServiceImpl split - parameters are One,, WORD
13:24:29 DEBUG SplitServiceImpl split - return value is [One]
13:24:29 DEBUG CharacterParser handleSplit - started
13:24:29 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, One
13:24:29 DEBUG SplitServiceImpl split - started
13:24:29 DEBUG SplitServiceImpl split - parameters are One, CHARACTER
13:24:29 DEBUG SplitServiceImpl split - return value is [O, n, e]
13:24:29 DEBUG MarkParser handleSplit - started
13:24:29 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}]}, One,
13:24:29 DEBUG SplitServiceImpl split - started
13:24:29 DEBUG SplitServiceImpl split - parameters are One,, MARK
13:24:29 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:29 DEBUG CharacterParser handleSplit - started
13:24:29 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:29 DEBUG SplitServiceImpl split - started
13:24:29 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:29 DEBUG SplitServiceImpl split - return value is [,]
13:24:29 DEBUG WordParser handleSplit - started
13:24:29 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, two.
13:24:29 DEBUG SplitServiceImpl split - started
13:24:29 DEBUG SplitServiceImpl split - parameters are two., WORD
13:24:29 DEBUG SplitServiceImpl split - return value is [two]
13:24:29 DEBUG CharacterParser handleSplit - started
13:24:29 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, two
13:24:29 DEBUG SplitServiceImpl split - started
13:24:29 DEBUG SplitServiceImpl split - parameters are two, CHARACTER
13:24:29 DEBUG SplitServiceImpl split - return value is [t, w, o]
13:24:29 DEBUG MarkParser handleSplit - started
13:24:29 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {w}, {o}]}]}, two.
13:24:29 DEBUG SplitServiceImpl split - started
13:24:29 DEBUG SplitServiceImpl split - parameters are two., MARK
13:24:29 DEBUG SplitServiceImpl split - return value is [, .]
13:24:29 DEBUG CharacterParser handleSplit - started
13:24:29 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:29 DEBUG SplitServiceImpl split - started
13:24:29 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:29 DEBUG SplitServiceImpl split - return value is [.]
13:24:29 DEBUG TextDAOImpl addTextObject - started
13:24:29 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{!}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:24:29 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{!}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:24:44 DEBUG TextServiceImpl createTree - started
13:24:44 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\another-test.txt
13:24:44 DEBUG TextDAOImpl readFile - started
13:24:44 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\another-test.txt
13:24:44 DEBUG TextDAOImpl readFile - return value is [One!, One, two.]
13:24:44 DEBUG ParagraphParser handleSplit - started
13:24:45 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, One!
One, two.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are One!
One, two., PARAGRAPH
13:24:45 DEBUG SplitServiceImpl split - return value is [One!, One, two.]
13:24:45 DEBUG SentenceParser handleSplit - started
13:24:45 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, One!
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are One!, SENTENCE
13:24:45 DEBUG SplitServiceImpl split - return value is [One!]
13:24:45 DEBUG LexemeParser handleSplit - started
13:24:45 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, One!
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are One!, LEXEME
13:24:45 DEBUG SplitServiceImpl split - return value is [One!]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, One!
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are One!, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [One]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, One
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are One, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [O, n, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}]}, One!
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are One!, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, !]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, !
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are !, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [!]
13:24:45 DEBUG SentenceParser handleSplit - started
13:24:45 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, One, two.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are One, two., SENTENCE
13:24:45 DEBUG SplitServiceImpl split - return value is [One, two.]
13:24:45 DEBUG LexemeParser handleSplit - started
13:24:45 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, One, two.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are One, two., LEXEME
13:24:45 DEBUG SplitServiceImpl split - return value is [One,, two.]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, One,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are One,, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [One]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, One
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are One, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [O, n, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}]}, One,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are One,, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [,]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, two.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are two., WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [two]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, two
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are two, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, w, o]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {w}, {o}]}]}, two.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are two., MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, .]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [.]
13:24:45 DEBUG TextDAOImpl addTextObject - started
13:24:45 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{!}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:24:45 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{!}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:24:45 DEBUG TextServiceImpl createTree - started
13:24:45 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\test.txt
13:24:45 DEBUG TextDAOImpl readFile - started
13:24:45 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\test.txt
13:24:45 DEBUG TextDAOImpl readFile - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., It is a established fact that a reader will be of a page when looking at its layout., Bye...]
13:24:45 DEBUG ParagraphParser handleSplit - started
13:24:45 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye...
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye..., PARAGRAPH
13:24:45 DEBUG SplitServiceImpl split - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., It is a established fact that a reader will be of a page when looking at its layout., Bye...]
13:24:45 DEBUG SentenceParser handleSplit - started
13:24:45 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., SENTENCE
13:24:45 DEBUG SplitServiceImpl split - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged., It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.]
13:24:45 DEBUG LexemeParser handleSplit - started
13:24:45 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged., LEXEME
13:24:45 DEBUG SplitServiceImpl split - return value is [It, has, survived, not, only, five, centuries,, but, also, the, leap, into, electronic, typesetting,, remaining, essentially, unchanged.]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [It]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [I, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, has
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are has, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [has]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, has
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are has, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [h, a, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, has
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are has, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, survived
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are survived, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [survived]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, survived
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are survived, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [s, u, r, v, i, v, e, d]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, survived
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are survived, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, not
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are not, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [not]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, not
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are not, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [n, o, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, not
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are not, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, only
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are only, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [only]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, only
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are only, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [o, n, l, y]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, only
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are only, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, five
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are five, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [five]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, five
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are five, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [f, i, v, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, five
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are five, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, centuries,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are centuries,, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [centuries]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, centuries
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are centuries, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [c, e, n, t, u, r, i, e, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}]}, centuries,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are centuries,, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [,]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, but
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are but, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [but]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, but
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are but, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [b, u, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, but
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are but, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, also
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are also, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [also]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, also
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are also, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a, l, s, o]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, also
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are also, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [the]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, leap
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are leap, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [leap]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, leap
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are leap, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, e, a, p]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, leap
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are leap, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, into
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are into, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [into]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, into
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are into, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, n, t, o]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, into
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are into, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, electronic
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are electronic, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [electronic]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, electronic
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are electronic, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [e, l, e, c, t, r, o, n, i, c]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, electronic
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are electronic, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, typesetting,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are typesetting,, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [typesetting]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, typesetting
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are typesetting, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, y, p, e, s, e, t, t, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}]}, typesetting,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are typesetting,, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [,]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, remaining
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are remaining, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [remaining]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, remaining
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are remaining, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [r, e, m, a, i, n, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, remaining
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are remaining, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, essentially
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are essentially, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [essentially]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, essentially
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are essentially, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [e, s, s, e, n, t, i, a, l, l, y]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, essentially
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are essentially, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, unchanged.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are unchanged., WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [unchanged]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, unchanged
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are unchanged, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [u, n, c, h, a, n, g, e, d]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}]}, unchanged.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are unchanged., MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, .]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [.]
13:24:45 DEBUG LexemeParser handleSplit - started
13:24:45 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., LEXEME
13:24:45 DEBUG SplitServiceImpl split - return value is [It, was, popularised, in, the, with, the, release, of, Letraset, sheets, containing, Lorem, Ipsum, passages,, and, more, recently, withdesktop, publishing, software, like, Aldus, PageMaker, including, versions, of, Lorem, Ipsum.]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [It]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [I, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, was
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are was, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [was]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, was
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are was, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [w, a, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, was
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are was, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, popularised
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are popularised, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [popularised]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, popularised
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are popularised, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [p, o, p, u, l, a, r, i, s, e, d]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, popularised
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are popularised, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, in
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are in, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [in]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, in
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are in, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, n]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, in
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are in, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [the]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, with
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are with, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [with]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, with
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are with, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [w, i, t, h]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, with
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are with, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [the]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, release
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are release, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [release]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, release
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are release, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [r, e, l, e, a, s, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, release
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are release, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [of]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Letraset
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Letraset, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [Letraset]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Letraset
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Letraset, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [L, e, t, r, a, s, e, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, Letraset
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Letraset, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, sheets
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are sheets, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [sheets]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, sheets
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are sheets, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [s, h, e, e, t, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, sheets
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are sheets, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, containing
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are containing, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [containing]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, containing
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are containing, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [c, o, n, t, a, i, n, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, containing
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are containing, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Lorem
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Lorem, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [Lorem]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Lorem
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Lorem, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [L, o, r, e, m]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, Lorem
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Lorem, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, passages,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are passages,, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [passages]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, passages
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are passages, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [p, a, s, s, a, g, e, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}]}, passages,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are passages,, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [,]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, and
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are and, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [and]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, and
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are and, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a, n, d]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, and
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are and, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, more
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are more, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [more]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, more
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are more, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [m, o, r, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, more
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are more, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, recently
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are recently, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [recently]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, recently
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are recently, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [r, e, c, e, n, t, l, y]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, recently
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are recently, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, withdesktop
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are withdesktop, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [withdesktop]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, withdesktop
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are withdesktop, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [w, i, t, h, d, e, s, k, t, o, p]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, withdesktop
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are withdesktop, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, publishing
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are publishing, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [publishing]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, publishing
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are publishing, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [p, u, b, l, i, s, h, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, publishing
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are publishing, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, software
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are software, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [software]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, software
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are software, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [s, o, f, t, w, a, r, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, software
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are software, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, like
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are like, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [like]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, like
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are like, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, i, k, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, like
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are like, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Aldus
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Aldus, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [Aldus]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Aldus
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Aldus, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [A, l, d, u, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, Aldus
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Aldus, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, PageMaker
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are PageMaker, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [PageMaker]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, PageMaker
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are PageMaker, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [P, a, g, e, M, a, k, e, r]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, PageMaker
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are PageMaker, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, including
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are including, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [including]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, including
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are including, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, n, c, l, u, d, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, including
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are including, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, versions
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are versions, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [versions]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, versions
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are versions, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [v, e, r, s, i, o, n, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, versions
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are versions, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [of]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Lorem
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Lorem, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [Lorem]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Lorem
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Lorem, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [L, o, r, e, m]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, Lorem
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Lorem, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum., WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum., MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, .]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [.]
13:24:45 DEBUG SentenceParser handleSplit - started
13:24:45 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., SENTENCE
13:24:45 DEBUG SplitServiceImpl split - return value is [It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout., The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.]
13:24:45 DEBUG LexemeParser handleSplit - started
13:24:45 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout., LEXEME
13:24:45 DEBUG SplitServiceImpl split - return value is [It, is, a, long, established, fact, that, a, reader, will, be, distracted, by, the, readable, content, of, a, page, when, looking, at, its, layout.]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [It]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [I, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [is]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, long
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are long, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [long]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, long
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are long, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, o, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, long
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are long, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, established
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are established, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [established]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, established
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are established, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [e, s, t, a, b, l, i, s, h, e, d]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, established
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are established, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, fact
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are fact, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [fact]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, fact
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are fact, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [f, a, c, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, fact
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are fact, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [that]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, reader
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are reader, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [reader]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, reader
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are reader, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [r, e, a, d, e, r]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, reader
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are reader, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, will
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are will, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [will]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, will
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are will, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [w, i, l, l]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, will
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are will, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, be
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are be, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [be]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, be
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are be, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [b, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, be
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are be, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, distracted
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are distracted, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [distracted]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, distracted
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are distracted, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [d, i, s, t, r, a, c, t, e, d]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, distracted
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are distracted, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, by
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are by, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [by]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, by
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are by, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [b, y]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, by
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are by, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [the]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, readable
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are readable, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [readable]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, readable
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are readable, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [r, e, a, d, a, b, l, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, readable
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are readable, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are content, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [content]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are content, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [c, o, n, t, e, n, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are content, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [of]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, page
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are page, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [page]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, page
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are page, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [p, a, g, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, page
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are page, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, when
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are when, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [when]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, when
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are when, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [w, h, e, n]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, when
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are when, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, looking
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are looking, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [looking]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, looking
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are looking, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, o, o, k, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, looking
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are looking, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, at
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are at, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [at]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, at
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are at, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, at
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are at, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, its
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are its, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [its]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, its
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are its, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, t, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, its
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are its, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, layout.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are layout., WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [layout]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, layout
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are layout, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, a, y, o, u, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}]}, layout.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are layout., MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, .]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [.]
13:24:45 DEBUG LexemeParser handleSplit - started
13:24:45 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., LEXEME
13:24:45 DEBUG SplitServiceImpl split - return value is [The, point, of, using, Ipsum, is, that, it, has, a, more-or-less, normal, distribution, of, letters,, as, opposed, to, using, 'Content, here,, content, here',, making, it, look, like, readable, English.]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, The
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are The, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [The]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, The
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are The, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [T, h, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, The
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are The, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, point
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are point, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [point]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, point
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are point, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [p, o, i, n, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, point
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are point, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [of]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, using
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are using, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [using]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, using
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are using, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [u, s, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, using
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are using, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [is]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [that]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, it
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are it, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [it]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, it
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are it, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, it
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are it, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, has
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are has, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [has]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, has
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are has, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [h, a, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, has
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are has, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, more-or-less
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are more-or-less, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [more-or-less]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, more-or-less
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are more-or-less, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [m, o, r, e, -, o, r, -, l, e, s, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, more-or-less
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are more-or-less, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, normal
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are normal, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [normal]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, normal
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are normal, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [n, o, r, m, a, l]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, normal
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are normal, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, distribution
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are distribution, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [distribution]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, distribution
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are distribution, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [d, i, s, t, r, i, b, u, t, i, o, n]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, distribution
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are distribution, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [of]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, letters,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are letters,, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [letters]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, letters
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are letters, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, e, t, t, e, r, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}]}, letters,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are letters,, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [,]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, as
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are as, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [as]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, as
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are as, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, as
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are as, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, opposed
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are opposed, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [opposed]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, opposed
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are opposed, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [o, p, p, o, s, e, d]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, opposed
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are opposed, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, to
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are to, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [to]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, to
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are to, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, o]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, to
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are to, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, using
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are using, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [using]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, using
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are using, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [u, s, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, using
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are using, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[]}, 'Content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are 'Content, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [']
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, '
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ', CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [']
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[{type=MARK, components=[{'}]}]}, 'Content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are 'Content, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [, Content]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, 
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are , CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Content, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [C, o, n, t, e, n, t]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, here,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are here,, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [here]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, here
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are here, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [h, e, r, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}]}, here,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are here,, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [,]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are content, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [content]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are content, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [c, o, n, t, e, n, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are content, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, here',
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are here',, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [here]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, here
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are here, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [h, e, r, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}]}, here',
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are here',, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, ',]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ',
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ',, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [', ,]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, making
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are making, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [making]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, making
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are making, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [m, a, k, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, making
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are making, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, it
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are it, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [it]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, it
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are it, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, it
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are it, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, look
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are look, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [look]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, look
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are look, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, o, o, k]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, look
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are look, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, like
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are like, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [like]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, like
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are like, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, i, k, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, like
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are like, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, readable
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are readable, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [readable]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, readable
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are readable, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [r, e, a, d, a, b, l, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, readable
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are readable, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, English.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are English., WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [English]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, English
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are English, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [E, n, g, l, i, s, h]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}]}, English.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are English., MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, .]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [.]
13:24:45 DEBUG SentenceParser handleSplit - started
13:24:45 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It is a established fact that a reader will be of a page when looking at its layout.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It is a established fact that a reader will be of a page when looking at its layout., SENTENCE
13:24:45 DEBUG SplitServiceImpl split - return value is [It is a established fact that a reader will be of a page when looking at its layout.]
13:24:45 DEBUG LexemeParser handleSplit - started
13:24:45 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It is a established fact that a reader will be of a page when looking at its layout.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It is a established fact that a reader will be of a page when looking at its layout., LEXEME
13:24:45 DEBUG SplitServiceImpl split - return value is [It, is, a, established, fact, that, a, reader, will, be, of, a, page, when, looking, at, its, layout.]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [It]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [I, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [is]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, established
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are established, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [established]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, established
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are established, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [e, s, t, a, b, l, i, s, h, e, d]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, established
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are established, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, fact
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are fact, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [fact]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, fact
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are fact, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [f, a, c, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, fact
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are fact, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [that]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, reader
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are reader, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [reader]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, reader
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are reader, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [r, e, a, d, e, r]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, reader
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are reader, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, will
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are will, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [will]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, will
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are will, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [w, i, l, l]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, will
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are will, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, be
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are be, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [be]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, be
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are be, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [b, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, be
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are be, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [of]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, page
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are page, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [page]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, page
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are page, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [p, a, g, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, page
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are page, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, when
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are when, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [when]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, when
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are when, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [w, h, e, n]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, when
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are when, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, looking
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are looking, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [looking]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, looking
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are looking, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, o, o, k, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, looking
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are looking, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, at
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are at, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [at]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, at
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are at, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, at
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are at, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, its
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are its, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [its]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, its
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are its, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, t, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, its
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are its, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, layout.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are layout., WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [layout]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, layout
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are layout, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, a, y, o, u, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}]}, layout.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are layout., MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, .]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [.]
13:24:45 DEBUG SentenceParser handleSplit - started
13:24:45 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Bye...
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Bye..., SENTENCE
13:24:45 DEBUG SplitServiceImpl split - return value is [Bye...]
13:24:45 DEBUG LexemeParser handleSplit - started
13:24:45 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Bye...
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Bye..., LEXEME
13:24:45 DEBUG SplitServiceImpl split - return value is [Bye...]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Bye...
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Bye..., WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [Bye]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Bye
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Bye, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [B, y, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}]}, Bye...
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Bye..., MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, ...]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ...
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ..., CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [., ., .]
13:24:45 DEBUG TextDAOImpl addTextObject - started
13:24:45 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}
13:24:45 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}
13:24:45 DEBUG TextServiceImpl receiveTextCollection - started
13:24:45 DEBUG TextDAOImpl receiveTextCollection - started
13:24:45 DEBUG TextDAOImpl receiveTextCollection - return value is {0={type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{!}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}]}]}, 1={type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}}
13:24:45 DEBUG TextServiceImpl receiveTextCollection - return value is {0={type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{!}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}]}]}, 1={type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}}
13:24:45 DEBUG TextServiceImpl createTree - started
13:24:45 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\test.txt
13:24:45 DEBUG TextDAOImpl readFile - started
13:24:45 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\test.txt
13:24:45 DEBUG TextDAOImpl readFile - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., It is a established fact that a reader will be of a page when looking at its layout., Bye...]
13:24:45 DEBUG ParagraphParser handleSplit - started
13:24:45 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye...
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye..., PARAGRAPH
13:24:45 DEBUG SplitServiceImpl split - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., It is a established fact that a reader will be of a page when looking at its layout., Bye...]
13:24:45 DEBUG SentenceParser handleSplit - started
13:24:45 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., SENTENCE
13:24:45 DEBUG SplitServiceImpl split - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged., It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.]
13:24:45 DEBUG LexemeParser handleSplit - started
13:24:45 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged., LEXEME
13:24:45 DEBUG SplitServiceImpl split - return value is [It, has, survived, not, only, five, centuries,, but, also, the, leap, into, electronic, typesetting,, remaining, essentially, unchanged.]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [It]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [I, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, has
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are has, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [has]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, has
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are has, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [h, a, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, has
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are has, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, survived
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are survived, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [survived]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, survived
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are survived, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [s, u, r, v, i, v, e, d]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, survived
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are survived, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, not
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are not, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [not]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, not
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are not, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [n, o, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, not
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are not, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, only
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are only, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [only]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, only
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are only, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [o, n, l, y]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, only
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are only, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, five
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are five, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [five]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, five
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are five, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [f, i, v, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, five
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are five, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, centuries,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are centuries,, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [centuries]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, centuries
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are centuries, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [c, e, n, t, u, r, i, e, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}]}, centuries,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are centuries,, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [,]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, but
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are but, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [but]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, but
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are but, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [b, u, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, but
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are but, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, also
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are also, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [also]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, also
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are also, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a, l, s, o]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, also
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are also, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [the]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, leap
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are leap, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [leap]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, leap
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are leap, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, e, a, p]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, leap
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are leap, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, into
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are into, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [into]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, into
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are into, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, n, t, o]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, into
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are into, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, electronic
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are electronic, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [electronic]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, electronic
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are electronic, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [e, l, e, c, t, r, o, n, i, c]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, electronic
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are electronic, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, typesetting,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are typesetting,, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [typesetting]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, typesetting
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are typesetting, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, y, p, e, s, e, t, t, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}]}, typesetting,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are typesetting,, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [,]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, remaining
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are remaining, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [remaining]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, remaining
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are remaining, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [r, e, m, a, i, n, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, remaining
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are remaining, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, essentially
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are essentially, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [essentially]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, essentially
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are essentially, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [e, s, s, e, n, t, i, a, l, l, y]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, essentially
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are essentially, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, unchanged.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are unchanged., WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [unchanged]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, unchanged
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are unchanged, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [u, n, c, h, a, n, g, e, d]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}]}, unchanged.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are unchanged., MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, .]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [.]
13:24:45 DEBUG LexemeParser handleSplit - started
13:24:45 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., LEXEME
13:24:45 DEBUG SplitServiceImpl split - return value is [It, was, popularised, in, the, with, the, release, of, Letraset, sheets, containing, Lorem, Ipsum, passages,, and, more, recently, withdesktop, publishing, software, like, Aldus, PageMaker, including, versions, of, Lorem, Ipsum.]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [It]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [I, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, was
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are was, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [was]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, was
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are was, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [w, a, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, was
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are was, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, popularised
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are popularised, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [popularised]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, popularised
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are popularised, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [p, o, p, u, l, a, r, i, s, e, d]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, popularised
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are popularised, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, in
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are in, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [in]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, in
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are in, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, n]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, in
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are in, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [the]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, with
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are with, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [with]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, with
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are with, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [w, i, t, h]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, with
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are with, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [the]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, release
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are release, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [release]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, release
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are release, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [r, e, l, e, a, s, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, release
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are release, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [of]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Letraset
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Letraset, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [Letraset]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Letraset
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Letraset, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [L, e, t, r, a, s, e, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, Letraset
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Letraset, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, sheets
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are sheets, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [sheets]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, sheets
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are sheets, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [s, h, e, e, t, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, sheets
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are sheets, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, containing
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are containing, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [containing]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, containing
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are containing, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [c, o, n, t, a, i, n, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, containing
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are containing, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Lorem
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Lorem, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [Lorem]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Lorem
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Lorem, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [L, o, r, e, m]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, Lorem
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Lorem, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, passages,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are passages,, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [passages]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, passages
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are passages, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [p, a, s, s, a, g, e, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}]}, passages,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are passages,, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [,]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, and
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are and, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [and]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, and
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are and, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a, n, d]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, and
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are and, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, more
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are more, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [more]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, more
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are more, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [m, o, r, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, more
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are more, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, recently
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are recently, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [recently]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, recently
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are recently, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [r, e, c, e, n, t, l, y]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, recently
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are recently, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, withdesktop
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are withdesktop, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [withdesktop]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, withdesktop
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are withdesktop, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [w, i, t, h, d, e, s, k, t, o, p]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, withdesktop
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are withdesktop, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, publishing
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are publishing, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [publishing]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, publishing
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are publishing, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [p, u, b, l, i, s, h, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, publishing
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are publishing, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, software
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are software, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [software]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, software
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are software, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [s, o, f, t, w, a, r, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, software
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are software, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, like
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are like, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [like]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, like
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are like, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, i, k, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, like
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are like, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Aldus
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Aldus, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [Aldus]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Aldus
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Aldus, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [A, l, d, u, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, Aldus
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Aldus, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, PageMaker
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are PageMaker, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [PageMaker]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, PageMaker
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are PageMaker, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [P, a, g, e, M, a, k, e, r]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, PageMaker
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are PageMaker, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, including
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are including, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [including]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, including
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are including, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, n, c, l, u, d, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, including
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are including, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, versions
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are versions, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [versions]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, versions
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are versions, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [v, e, r, s, i, o, n, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, versions
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are versions, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [of]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Lorem
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Lorem, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [Lorem]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Lorem
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Lorem, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [L, o, r, e, m]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, Lorem
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Lorem, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum., WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum., MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, .]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [.]
13:24:45 DEBUG SentenceParser handleSplit - started
13:24:45 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., SENTENCE
13:24:45 DEBUG SplitServiceImpl split - return value is [It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout., The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.]
13:24:45 DEBUG LexemeParser handleSplit - started
13:24:45 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout., LEXEME
13:24:45 DEBUG SplitServiceImpl split - return value is [It, is, a, long, established, fact, that, a, reader, will, be, distracted, by, the, readable, content, of, a, page, when, looking, at, its, layout.]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [It]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [I, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [is]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, long
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are long, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [long]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, long
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are long, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, o, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, long
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are long, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, established
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are established, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [established]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, established
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are established, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [e, s, t, a, b, l, i, s, h, e, d]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, established
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are established, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, fact
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are fact, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [fact]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, fact
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are fact, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [f, a, c, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, fact
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are fact, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [that]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, reader
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are reader, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [reader]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, reader
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are reader, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [r, e, a, d, e, r]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, reader
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are reader, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, will
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are will, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [will]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, will
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are will, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [w, i, l, l]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, will
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are will, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, be
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are be, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [be]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, be
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are be, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [b, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, be
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are be, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, distracted
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are distracted, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [distracted]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, distracted
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are distracted, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [d, i, s, t, r, a, c, t, e, d]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, distracted
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are distracted, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, by
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are by, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [by]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, by
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are by, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [b, y]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, by
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are by, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [the]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, h, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are the, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, readable
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are readable, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [readable]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, readable
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are readable, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [r, e, a, d, a, b, l, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, readable
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are readable, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are content, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [content]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are content, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [c, o, n, t, e, n, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are content, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [of]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, page
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are page, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [page]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, page
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are page, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [p, a, g, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, page
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are page, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, when
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are when, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [when]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, when
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are when, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [w, h, e, n]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, when
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are when, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, looking
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are looking, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [looking]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, looking
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are looking, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, o, o, k, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, looking
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are looking, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, at
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are at, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [at]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, at
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are at, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, at
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are at, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, its
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are its, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [its]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, its
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are its, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, t, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, its
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are its, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, layout.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are layout., WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [layout]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, layout
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are layout, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, a, y, o, u, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}]}, layout.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are layout., MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, .]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [.]
13:24:45 DEBUG LexemeParser handleSplit - started
13:24:45 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., LEXEME
13:24:45 DEBUG SplitServiceImpl split - return value is [The, point, of, using, Ipsum, is, that, it, has, a, more-or-less, normal, distribution, of, letters,, as, opposed, to, using, 'Content, here,, content, here',, making, it, look, like, readable, English.]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, The
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are The, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [The]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, The
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are The, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [T, h, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, The
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are The, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, point
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are point, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [point]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, point
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are point, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [p, o, i, n, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, point
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are point, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [of]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, using
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are using, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [using]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, using
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are using, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [u, s, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, using
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are using, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [Ipsum]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Ipsum, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [is]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [that]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, it
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are it, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [it]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, it
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are it, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, it
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are it, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, has
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are has, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [has]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, has
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are has, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [h, a, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, has
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are has, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, more-or-less
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are more-or-less, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [more-or-less]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, more-or-less
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are more-or-less, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [m, o, r, e, -, o, r, -, l, e, s, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, more-or-less
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are more-or-less, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, normal
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are normal, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [normal]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, normal
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are normal, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [n, o, r, m, a, l]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, normal
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are normal, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, distribution
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are distribution, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [distribution]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, distribution
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are distribution, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [d, i, s, t, r, i, b, u, t, i, o, n]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, distribution
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are distribution, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [of]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, letters,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are letters,, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [letters]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, letters
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are letters, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, e, t, t, e, r, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}]}, letters,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are letters,, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [,]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, as
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are as, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [as]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, as
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are as, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, as
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are as, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, opposed
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are opposed, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [opposed]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, opposed
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are opposed, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [o, p, p, o, s, e, d]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, opposed
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are opposed, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, to
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are to, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [to]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, to
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are to, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, o]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, to
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are to, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, using
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are using, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [using]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, using
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are using, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [u, s, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, using
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are using, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[]}, 'Content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are 'Content, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [']
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, '
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ', CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [']
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[{type=MARK, components=[{'}]}]}, 'Content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are 'Content, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [, Content]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, 
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are , CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Content, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [C, o, n, t, e, n, t]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, here,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are here,, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [here]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, here
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are here, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [h, e, r, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}]}, here,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are here,, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, ,]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [,]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are content, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [content]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are content, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [c, o, n, t, e, n, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, content
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are content, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, here',
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are here',, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [here]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, here
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are here, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [h, e, r, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}]}, here',
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are here',, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, ',]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ',
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ',, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [', ,]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, making
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are making, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [making]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, making
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are making, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [m, a, k, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, making
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are making, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, it
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are it, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [it]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, it
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are it, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, it
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are it, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, look
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are look, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [look]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, look
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are look, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, o, o, k]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, look
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are look, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, like
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are like, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [like]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, like
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are like, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, i, k, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, like
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are like, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, readable
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are readable, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [readable]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, readable
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are readable, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [r, e, a, d, a, b, l, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, readable
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are readable, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, English.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are English., WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [English]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, English
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are English, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [E, n, g, l, i, s, h]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}]}, English.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are English., MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, .]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [.]
13:24:45 DEBUG SentenceParser handleSplit - started
13:24:45 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It is a established fact that a reader will be of a page when looking at its layout.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It is a established fact that a reader will be of a page when looking at its layout., SENTENCE
13:24:45 DEBUG SplitServiceImpl split - return value is [It is a established fact that a reader will be of a page when looking at its layout.]
13:24:45 DEBUG LexemeParser handleSplit - started
13:24:45 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It is a established fact that a reader will be of a page when looking at its layout.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It is a established fact that a reader will be of a page when looking at its layout., LEXEME
13:24:45 DEBUG SplitServiceImpl split - return value is [It, is, a, established, fact, that, a, reader, will, be, of, a, page, when, looking, at, its, layout.]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [It]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [I, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are It, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [is]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are is, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, established
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are established, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [established]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, established
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are established, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [e, s, t, a, b, l, i, s, h, e, d]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, established
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are established, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, fact
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are fact, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [fact]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, fact
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are fact, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [f, a, c, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, fact
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are fact, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [that]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are that, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, reader
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are reader, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [reader]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, reader
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are reader, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [r, e, a, d, e, r]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, reader
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are reader, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, will
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are will, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [will]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, will
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are will, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [w, i, l, l]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, will
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are will, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, be
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are be, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [be]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, be
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are be, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [b, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, be
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are be, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [of]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [o, f]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are of, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are a, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, page
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are page, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [page]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, page
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are page, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [p, a, g, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, page
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are page, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, when
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are when, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [when]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, when
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are when, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [w, h, e, n]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, when
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are when, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, looking
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are looking, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [looking]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, looking
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are looking, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, o, o, k, i, n, g]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, looking
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are looking, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, at
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are at, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [at]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, at
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are at, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [a, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, at
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are at, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, its
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are its, WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [its]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, its
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are its, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [i, t, s]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, its
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are its, MARK
13:24:45 DEBUG SplitServiceImpl split - return value is []
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, layout.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are layout., WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [layout]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, layout
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are layout, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [l, a, y, o, u, t]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}]}, layout.
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are layout., MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, .]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [.]
13:24:45 DEBUG SentenceParser handleSplit - started
13:24:45 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Bye...
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Bye..., SENTENCE
13:24:45 DEBUG SplitServiceImpl split - return value is [Bye...]
13:24:45 DEBUG LexemeParser handleSplit - started
13:24:45 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Bye...
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Bye..., LEXEME
13:24:45 DEBUG SplitServiceImpl split - return value is [Bye...]
13:24:45 DEBUG WordParser handleSplit - started
13:24:45 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Bye...
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Bye..., WORD
13:24:45 DEBUG SplitServiceImpl split - return value is [Bye]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Bye
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Bye, CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [B, y, e]
13:24:45 DEBUG MarkParser handleSplit - started
13:24:45 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}]}, Bye...
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are Bye..., MARK
13:24:45 DEBUG SplitServiceImpl split - return value is [, ...]
13:24:45 DEBUG CharacterParser handleSplit - started
13:24:45 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ...
13:24:45 DEBUG SplitServiceImpl split - started
13:24:45 DEBUG SplitServiceImpl split - parameters are ..., CHARACTER
13:24:45 DEBUG SplitServiceImpl split - return value is [., ., .]
13:24:45 DEBUG TextDAOImpl addTextObject - started
13:24:45 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}
13:24:45 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}
13:24:45 DEBUG TextServiceImpl joinTree - started
13:24:45 DEBUG TextServiceImpl joinTree - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}
13:24:45 DEBUG TextServiceImpl joinTree - return value is It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye...
13:35:25 DEBUG TextServiceImpl createTree - started
13:35:25 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\one-two.txt
13:35:25 DEBUG TextDAOImpl readFile - started
13:35:25 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\one-two.txt
13:35:25 DEBUG TextDAOImpl readFile - return value is [One., Two. Three. Four., Five. Six.]
13:35:25 DEBUG ParagraphParser handleSplit - started
13:35:25 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, One.
Two. Three. Four.
Five. Six.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are One.
Two. Three. Four.
Five. Six., PARAGRAPH
13:35:25 DEBUG SplitServiceImpl split - return value is [One., Two. Three. Four., Five. Six.]
13:35:25 DEBUG SentenceParser handleSplit - started
13:35:25 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, One.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are One., SENTENCE
13:35:25 DEBUG SplitServiceImpl split - return value is [One.]
13:35:25 DEBUG LexemeParser handleSplit - started
13:35:25 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, One.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are One., LEXEME
13:35:25 DEBUG SplitServiceImpl split - return value is [One.]
13:35:25 DEBUG WordParser handleSplit - started
13:35:25 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, One.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are One., WORD
13:35:25 DEBUG SplitServiceImpl split - return value is [One]
13:35:25 DEBUG CharacterParser handleSplit - started
13:35:25 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, One
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are One, CHARACTER
13:35:25 DEBUG SplitServiceImpl split - return value is [O, n, e]
13:35:25 DEBUG MarkParser handleSplit - started
13:35:25 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}]}, One.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are One., MARK
13:35:25 DEBUG SplitServiceImpl split - return value is [, .]
13:35:25 DEBUG CharacterParser handleSplit - started
13:35:25 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:35:25 DEBUG SplitServiceImpl split - return value is [.]
13:35:25 DEBUG SentenceParser handleSplit - started
13:35:25 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Two. Three. Four.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Two. Three. Four., SENTENCE
13:35:25 DEBUG SplitServiceImpl split - return value is [Two., Three., Four.]
13:35:25 DEBUG LexemeParser handleSplit - started
13:35:25 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Two.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Two., LEXEME
13:35:25 DEBUG SplitServiceImpl split - return value is [Two.]
13:35:25 DEBUG WordParser handleSplit - started
13:35:25 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Two.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Two., WORD
13:35:25 DEBUG SplitServiceImpl split - return value is [Two]
13:35:25 DEBUG CharacterParser handleSplit - started
13:35:25 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Two
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Two, CHARACTER
13:35:25 DEBUG SplitServiceImpl split - return value is [T, w, o]
13:35:25 DEBUG MarkParser handleSplit - started
13:35:25 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}]}, Two.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Two., MARK
13:35:25 DEBUG SplitServiceImpl split - return value is [, .]
13:35:25 DEBUG CharacterParser handleSplit - started
13:35:25 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:35:25 DEBUG SplitServiceImpl split - return value is [.]
13:35:25 DEBUG LexemeParser handleSplit - started
13:35:25 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Three.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Three., LEXEME
13:35:25 DEBUG SplitServiceImpl split - return value is [Three.]
13:35:25 DEBUG WordParser handleSplit - started
13:35:25 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Three.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Three., WORD
13:35:25 DEBUG SplitServiceImpl split - return value is [Three]
13:35:25 DEBUG CharacterParser handleSplit - started
13:35:25 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Three
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Three, CHARACTER
13:35:25 DEBUG SplitServiceImpl split - return value is [T, h, r, e, e]
13:35:25 DEBUG MarkParser handleSplit - started
13:35:25 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}]}, Three.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Three., MARK
13:35:25 DEBUG SplitServiceImpl split - return value is [, .]
13:35:25 DEBUG CharacterParser handleSplit - started
13:35:25 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:35:25 DEBUG SplitServiceImpl split - return value is [.]
13:35:25 DEBUG LexemeParser handleSplit - started
13:35:25 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Four.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Four., LEXEME
13:35:25 DEBUG SplitServiceImpl split - return value is [Four.]
13:35:25 DEBUG WordParser handleSplit - started
13:35:25 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Four.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Four., WORD
13:35:25 DEBUG SplitServiceImpl split - return value is [Four]
13:35:25 DEBUG CharacterParser handleSplit - started
13:35:25 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Four
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Four, CHARACTER
13:35:25 DEBUG SplitServiceImpl split - return value is [F, o, u, r]
13:35:25 DEBUG MarkParser handleSplit - started
13:35:25 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}]}, Four.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Four., MARK
13:35:25 DEBUG SplitServiceImpl split - return value is [, .]
13:35:25 DEBUG CharacterParser handleSplit - started
13:35:25 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:35:25 DEBUG SplitServiceImpl split - return value is [.]
13:35:25 DEBUG SentenceParser handleSplit - started
13:35:25 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Five. Six.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Five. Six., SENTENCE
13:35:25 DEBUG SplitServiceImpl split - return value is [Five., Six.]
13:35:25 DEBUG LexemeParser handleSplit - started
13:35:25 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Five.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Five., LEXEME
13:35:25 DEBUG SplitServiceImpl split - return value is [Five.]
13:35:25 DEBUG WordParser handleSplit - started
13:35:25 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Five.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Five., WORD
13:35:25 DEBUG SplitServiceImpl split - return value is [Five]
13:35:25 DEBUG CharacterParser handleSplit - started
13:35:25 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Five
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Five, CHARACTER
13:35:25 DEBUG SplitServiceImpl split - return value is [F, i, v, e]
13:35:25 DEBUG MarkParser handleSplit - started
13:35:25 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}]}, Five.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Five., MARK
13:35:25 DEBUG SplitServiceImpl split - return value is [, .]
13:35:25 DEBUG CharacterParser handleSplit - started
13:35:25 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:35:25 DEBUG SplitServiceImpl split - return value is [.]
13:35:25 DEBUG LexemeParser handleSplit - started
13:35:25 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Six.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Six., LEXEME
13:35:25 DEBUG SplitServiceImpl split - return value is [Six.]
13:35:25 DEBUG WordParser handleSplit - started
13:35:25 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Six.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Six., WORD
13:35:25 DEBUG SplitServiceImpl split - return value is [Six]
13:35:25 DEBUG CharacterParser handleSplit - started
13:35:25 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Six
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Six, CHARACTER
13:35:25 DEBUG SplitServiceImpl split - return value is [S, i, x]
13:35:25 DEBUG MarkParser handleSplit - started
13:35:25 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}]}, Six.
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are Six., MARK
13:35:25 DEBUG SplitServiceImpl split - return value is [, .]
13:35:25 DEBUG CharacterParser handleSplit - started
13:35:25 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:35:25 DEBUG SplitServiceImpl split - started
13:35:25 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:35:25 DEBUG SplitServiceImpl split - return value is [.]
13:35:25 DEBUG TextDAOImpl addTextObject - started
13:35:25 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:35:25 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:35:25 DEBUG SortServiceImpl sortParagraphs - started
13:35:25 DEBUG SortServiceImpl sortParagraphs - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:35:25 DEBUG SortServiceImpl sortParagraphs - return value is [{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}]
13:40:46 DEBUG TextServiceImpl createTree - started
13:40:46 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\one-two.txt
13:40:46 DEBUG TextDAOImpl readFile - started
13:40:46 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\one-two.txt
13:40:46 DEBUG TextDAOImpl readFile - return value is [One., Two. Three. Four., Five. Six.]
13:40:46 DEBUG ParagraphParser handleSplit - started
13:40:46 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, One.
Two. Three. Four.
Five. Six.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are One.
Two. Three. Four.
Five. Six., PARAGRAPH
13:40:46 DEBUG SplitServiceImpl split - return value is [One., Two. Three. Four., Five. Six.]
13:40:46 DEBUG SentenceParser handleSplit - started
13:40:46 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, One.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are One., SENTENCE
13:40:46 DEBUG SplitServiceImpl split - return value is [One.]
13:40:46 DEBUG LexemeParser handleSplit - started
13:40:46 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, One.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are One., LEXEME
13:40:46 DEBUG SplitServiceImpl split - return value is [One.]
13:40:46 DEBUG WordParser handleSplit - started
13:40:46 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, One.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are One., WORD
13:40:46 DEBUG SplitServiceImpl split - return value is [One]
13:40:46 DEBUG CharacterParser handleSplit - started
13:40:46 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, One
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are One, CHARACTER
13:40:46 DEBUG SplitServiceImpl split - return value is [O, n, e]
13:40:46 DEBUG MarkParser handleSplit - started
13:40:46 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}]}, One.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are One., MARK
13:40:46 DEBUG SplitServiceImpl split - return value is [, .]
13:40:46 DEBUG CharacterParser handleSplit - started
13:40:46 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:40:46 DEBUG SplitServiceImpl split - return value is [.]
13:40:46 DEBUG SentenceParser handleSplit - started
13:40:46 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Two. Three. Four.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Two. Three. Four., SENTENCE
13:40:46 DEBUG SplitServiceImpl split - return value is [Two., Three., Four.]
13:40:46 DEBUG LexemeParser handleSplit - started
13:40:46 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Two.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Two., LEXEME
13:40:46 DEBUG SplitServiceImpl split - return value is [Two.]
13:40:46 DEBUG WordParser handleSplit - started
13:40:46 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Two.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Two., WORD
13:40:46 DEBUG SplitServiceImpl split - return value is [Two]
13:40:46 DEBUG CharacterParser handleSplit - started
13:40:46 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Two
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Two, CHARACTER
13:40:46 DEBUG SplitServiceImpl split - return value is [T, w, o]
13:40:46 DEBUG MarkParser handleSplit - started
13:40:46 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}]}, Two.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Two., MARK
13:40:46 DEBUG SplitServiceImpl split - return value is [, .]
13:40:46 DEBUG CharacterParser handleSplit - started
13:40:46 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:40:46 DEBUG SplitServiceImpl split - return value is [.]
13:40:46 DEBUG LexemeParser handleSplit - started
13:40:46 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Three.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Three., LEXEME
13:40:46 DEBUG SplitServiceImpl split - return value is [Three.]
13:40:46 DEBUG WordParser handleSplit - started
13:40:46 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Three.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Three., WORD
13:40:46 DEBUG SplitServiceImpl split - return value is [Three]
13:40:46 DEBUG CharacterParser handleSplit - started
13:40:46 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Three
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Three, CHARACTER
13:40:46 DEBUG SplitServiceImpl split - return value is [T, h, r, e, e]
13:40:46 DEBUG MarkParser handleSplit - started
13:40:46 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}]}, Three.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Three., MARK
13:40:46 DEBUG SplitServiceImpl split - return value is [, .]
13:40:46 DEBUG CharacterParser handleSplit - started
13:40:46 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:40:46 DEBUG SplitServiceImpl split - return value is [.]
13:40:46 DEBUG LexemeParser handleSplit - started
13:40:46 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Four.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Four., LEXEME
13:40:46 DEBUG SplitServiceImpl split - return value is [Four.]
13:40:46 DEBUG WordParser handleSplit - started
13:40:46 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Four.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Four., WORD
13:40:46 DEBUG SplitServiceImpl split - return value is [Four]
13:40:46 DEBUG CharacterParser handleSplit - started
13:40:46 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Four
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Four, CHARACTER
13:40:46 DEBUG SplitServiceImpl split - return value is [F, o, u, r]
13:40:46 DEBUG MarkParser handleSplit - started
13:40:46 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}]}, Four.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Four., MARK
13:40:46 DEBUG SplitServiceImpl split - return value is [, .]
13:40:46 DEBUG CharacterParser handleSplit - started
13:40:46 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:40:46 DEBUG SplitServiceImpl split - return value is [.]
13:40:46 DEBUG SentenceParser handleSplit - started
13:40:46 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Five. Six.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Five. Six., SENTENCE
13:40:46 DEBUG SplitServiceImpl split - return value is [Five., Six.]
13:40:46 DEBUG LexemeParser handleSplit - started
13:40:46 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Five.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Five., LEXEME
13:40:46 DEBUG SplitServiceImpl split - return value is [Five.]
13:40:46 DEBUG WordParser handleSplit - started
13:40:46 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Five.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Five., WORD
13:40:46 DEBUG SplitServiceImpl split - return value is [Five]
13:40:46 DEBUG CharacterParser handleSplit - started
13:40:46 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Five
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Five, CHARACTER
13:40:46 DEBUG SplitServiceImpl split - return value is [F, i, v, e]
13:40:46 DEBUG MarkParser handleSplit - started
13:40:46 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}]}, Five.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Five., MARK
13:40:46 DEBUG SplitServiceImpl split - return value is [, .]
13:40:46 DEBUG CharacterParser handleSplit - started
13:40:46 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:40:46 DEBUG SplitServiceImpl split - return value is [.]
13:40:46 DEBUG LexemeParser handleSplit - started
13:40:46 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Six.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Six., LEXEME
13:40:46 DEBUG SplitServiceImpl split - return value is [Six.]
13:40:46 DEBUG WordParser handleSplit - started
13:40:46 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Six.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Six., WORD
13:40:46 DEBUG SplitServiceImpl split - return value is [Six]
13:40:46 DEBUG CharacterParser handleSplit - started
13:40:46 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Six
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Six, CHARACTER
13:40:46 DEBUG SplitServiceImpl split - return value is [S, i, x]
13:40:46 DEBUG MarkParser handleSplit - started
13:40:46 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}]}, Six.
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are Six., MARK
13:40:46 DEBUG SplitServiceImpl split - return value is [, .]
13:40:46 DEBUG CharacterParser handleSplit - started
13:40:46 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:40:46 DEBUG SplitServiceImpl split - started
13:40:46 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:40:46 DEBUG SplitServiceImpl split - return value is [.]
13:40:46 DEBUG TextDAOImpl addTextObject - started
13:40:46 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:40:46 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:40:46 DEBUG SortServiceImpl sortParagraphs - started
13:40:46 DEBUG SortServiceImpl sortParagraphs - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:40:46 DEBUG SortServiceImpl sortParagraphs - return value is [{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}]
13:41:58 DEBUG TextServiceImpl createTree - started
13:41:58 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\one-two.txt
13:41:58 DEBUG TextDAOImpl readFile - started
13:41:58 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\one-two.txt
13:41:58 DEBUG TextDAOImpl readFile - return value is [One., Two. Three. Four., Five. Six.]
13:41:58 DEBUG ParagraphParser handleSplit - started
13:41:58 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, One.
Two. Three. Four.
Five. Six.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are One.
Two. Three. Four.
Five. Six., PARAGRAPH
13:41:58 DEBUG SplitServiceImpl split - return value is [One., Two. Three. Four., Five. Six.]
13:41:58 DEBUG SentenceParser handleSplit - started
13:41:58 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, One.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are One., SENTENCE
13:41:58 DEBUG SplitServiceImpl split - return value is [One.]
13:41:58 DEBUG LexemeParser handleSplit - started
13:41:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, One.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are One., LEXEME
13:41:58 DEBUG SplitServiceImpl split - return value is [One.]
13:41:58 DEBUG WordParser handleSplit - started
13:41:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, One.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are One., WORD
13:41:58 DEBUG SplitServiceImpl split - return value is [One]
13:41:58 DEBUG CharacterParser handleSplit - started
13:41:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, One
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are One, CHARACTER
13:41:58 DEBUG SplitServiceImpl split - return value is [O, n, e]
13:41:58 DEBUG MarkParser handleSplit - started
13:41:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}]}, One.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are One., MARK
13:41:58 DEBUG SplitServiceImpl split - return value is [, .]
13:41:58 DEBUG CharacterParser handleSplit - started
13:41:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:41:58 DEBUG SplitServiceImpl split - return value is [.]
13:41:58 DEBUG SentenceParser handleSplit - started
13:41:58 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Two. Three. Four.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Two. Three. Four., SENTENCE
13:41:58 DEBUG SplitServiceImpl split - return value is [Two., Three., Four.]
13:41:58 DEBUG LexemeParser handleSplit - started
13:41:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Two.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Two., LEXEME
13:41:58 DEBUG SplitServiceImpl split - return value is [Two.]
13:41:58 DEBUG WordParser handleSplit - started
13:41:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Two.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Two., WORD
13:41:58 DEBUG SplitServiceImpl split - return value is [Two]
13:41:58 DEBUG CharacterParser handleSplit - started
13:41:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Two
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Two, CHARACTER
13:41:58 DEBUG SplitServiceImpl split - return value is [T, w, o]
13:41:58 DEBUG MarkParser handleSplit - started
13:41:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}]}, Two.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Two., MARK
13:41:58 DEBUG SplitServiceImpl split - return value is [, .]
13:41:58 DEBUG CharacterParser handleSplit - started
13:41:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:41:58 DEBUG SplitServiceImpl split - return value is [.]
13:41:58 DEBUG LexemeParser handleSplit - started
13:41:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Three.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Three., LEXEME
13:41:58 DEBUG SplitServiceImpl split - return value is [Three.]
13:41:58 DEBUG WordParser handleSplit - started
13:41:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Three.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Three., WORD
13:41:58 DEBUG SplitServiceImpl split - return value is [Three]
13:41:58 DEBUG CharacterParser handleSplit - started
13:41:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Three
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Three, CHARACTER
13:41:58 DEBUG SplitServiceImpl split - return value is [T, h, r, e, e]
13:41:58 DEBUG MarkParser handleSplit - started
13:41:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}]}, Three.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Three., MARK
13:41:58 DEBUG SplitServiceImpl split - return value is [, .]
13:41:58 DEBUG CharacterParser handleSplit - started
13:41:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:41:58 DEBUG SplitServiceImpl split - return value is [.]
13:41:58 DEBUG LexemeParser handleSplit - started
13:41:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Four.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Four., LEXEME
13:41:58 DEBUG SplitServiceImpl split - return value is [Four.]
13:41:58 DEBUG WordParser handleSplit - started
13:41:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Four.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Four., WORD
13:41:58 DEBUG SplitServiceImpl split - return value is [Four]
13:41:58 DEBUG CharacterParser handleSplit - started
13:41:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Four
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Four, CHARACTER
13:41:58 DEBUG SplitServiceImpl split - return value is [F, o, u, r]
13:41:58 DEBUG MarkParser handleSplit - started
13:41:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}]}, Four.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Four., MARK
13:41:58 DEBUG SplitServiceImpl split - return value is [, .]
13:41:58 DEBUG CharacterParser handleSplit - started
13:41:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:41:58 DEBUG SplitServiceImpl split - return value is [.]
13:41:58 DEBUG SentenceParser handleSplit - started
13:41:58 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Five. Six.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Five. Six., SENTENCE
13:41:58 DEBUG SplitServiceImpl split - return value is [Five., Six.]
13:41:58 DEBUG LexemeParser handleSplit - started
13:41:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Five.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Five., LEXEME
13:41:58 DEBUG SplitServiceImpl split - return value is [Five.]
13:41:58 DEBUG WordParser handleSplit - started
13:41:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Five.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Five., WORD
13:41:58 DEBUG SplitServiceImpl split - return value is [Five]
13:41:58 DEBUG CharacterParser handleSplit - started
13:41:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Five
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Five, CHARACTER
13:41:58 DEBUG SplitServiceImpl split - return value is [F, i, v, e]
13:41:58 DEBUG MarkParser handleSplit - started
13:41:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}]}, Five.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Five., MARK
13:41:58 DEBUG SplitServiceImpl split - return value is [, .]
13:41:58 DEBUG CharacterParser handleSplit - started
13:41:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:41:58 DEBUG SplitServiceImpl split - return value is [.]
13:41:58 DEBUG LexemeParser handleSplit - started
13:41:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Six.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Six., LEXEME
13:41:58 DEBUG SplitServiceImpl split - return value is [Six.]
13:41:58 DEBUG WordParser handleSplit - started
13:41:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Six.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Six., WORD
13:41:58 DEBUG SplitServiceImpl split - return value is [Six]
13:41:58 DEBUG CharacterParser handleSplit - started
13:41:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Six
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Six, CHARACTER
13:41:58 DEBUG SplitServiceImpl split - return value is [S, i, x]
13:41:58 DEBUG MarkParser handleSplit - started
13:41:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}]}, Six.
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are Six., MARK
13:41:58 DEBUG SplitServiceImpl split - return value is [, .]
13:41:58 DEBUG CharacterParser handleSplit - started
13:41:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:41:58 DEBUG SplitServiceImpl split - started
13:41:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:41:58 DEBUG SplitServiceImpl split - return value is [.]
13:41:58 DEBUG TextDAOImpl addTextObject - started
13:41:58 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:41:58 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:41:58 DEBUG SortServiceImpl sortParagraphs - started
13:41:58 DEBUG SortServiceImpl sortParagraphs - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:41:58 DEBUG SortServiceImpl sortParagraphs - return value is [{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}]
13:46:12 DEBUG TextServiceImpl createTree - started
13:46:12 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\one-two.txt
13:46:12 DEBUG TextDAOImpl readFile - started
13:46:12 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\one-two.txt
13:46:12 DEBUG TextDAOImpl readFile - return value is [One., Two. Three. Four., Five. Six.]
13:46:12 DEBUG ParagraphParser handleSplit - started
13:46:12 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, One.
Two. Three. Four.
Five. Six.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are One.
Two. Three. Four.
Five. Six., PARAGRAPH
13:46:12 DEBUG SplitServiceImpl split - return value is [One., Two. Three. Four., Five. Six.]
13:46:12 DEBUG SentenceParser handleSplit - started
13:46:12 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, One.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are One., SENTENCE
13:46:12 DEBUG SplitServiceImpl split - return value is [One.]
13:46:12 DEBUG LexemeParser handleSplit - started
13:46:12 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, One.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are One., LEXEME
13:46:12 DEBUG SplitServiceImpl split - return value is [One.]
13:46:12 DEBUG WordParser handleSplit - started
13:46:12 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, One.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are One., WORD
13:46:12 DEBUG SplitServiceImpl split - return value is [One]
13:46:12 DEBUG CharacterParser handleSplit - started
13:46:12 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, One
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are One, CHARACTER
13:46:12 DEBUG SplitServiceImpl split - return value is [O, n, e]
13:46:12 DEBUG MarkParser handleSplit - started
13:46:12 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}]}, One.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are One., MARK
13:46:12 DEBUG SplitServiceImpl split - return value is [, .]
13:46:12 DEBUG CharacterParser handleSplit - started
13:46:12 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:12 DEBUG SplitServiceImpl split - return value is [.]
13:46:12 DEBUG SentenceParser handleSplit - started
13:46:12 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Two. Three. Four.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Two. Three. Four., SENTENCE
13:46:12 DEBUG SplitServiceImpl split - return value is [Two., Three., Four.]
13:46:12 DEBUG LexemeParser handleSplit - started
13:46:12 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Two.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Two., LEXEME
13:46:12 DEBUG SplitServiceImpl split - return value is [Two.]
13:46:12 DEBUG WordParser handleSplit - started
13:46:12 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Two.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Two., WORD
13:46:12 DEBUG SplitServiceImpl split - return value is [Two]
13:46:12 DEBUG CharacterParser handleSplit - started
13:46:12 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Two
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Two, CHARACTER
13:46:12 DEBUG SplitServiceImpl split - return value is [T, w, o]
13:46:12 DEBUG MarkParser handleSplit - started
13:46:12 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}]}, Two.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Two., MARK
13:46:12 DEBUG SplitServiceImpl split - return value is [, .]
13:46:12 DEBUG CharacterParser handleSplit - started
13:46:12 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:12 DEBUG SplitServiceImpl split - return value is [.]
13:46:12 DEBUG LexemeParser handleSplit - started
13:46:12 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Three.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Three., LEXEME
13:46:12 DEBUG SplitServiceImpl split - return value is [Three.]
13:46:12 DEBUG WordParser handleSplit - started
13:46:12 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Three.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Three., WORD
13:46:12 DEBUG SplitServiceImpl split - return value is [Three]
13:46:12 DEBUG CharacterParser handleSplit - started
13:46:12 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Three
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Three, CHARACTER
13:46:12 DEBUG SplitServiceImpl split - return value is [T, h, r, e, e]
13:46:12 DEBUG MarkParser handleSplit - started
13:46:12 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}]}, Three.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Three., MARK
13:46:12 DEBUG SplitServiceImpl split - return value is [, .]
13:46:12 DEBUG CharacterParser handleSplit - started
13:46:12 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:12 DEBUG SplitServiceImpl split - return value is [.]
13:46:12 DEBUG LexemeParser handleSplit - started
13:46:12 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Four.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Four., LEXEME
13:46:12 DEBUG SplitServiceImpl split - return value is [Four.]
13:46:12 DEBUG WordParser handleSplit - started
13:46:12 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Four.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Four., WORD
13:46:12 DEBUG SplitServiceImpl split - return value is [Four]
13:46:12 DEBUG CharacterParser handleSplit - started
13:46:12 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Four
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Four, CHARACTER
13:46:12 DEBUG SplitServiceImpl split - return value is [F, o, u, r]
13:46:12 DEBUG MarkParser handleSplit - started
13:46:12 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}]}, Four.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Four., MARK
13:46:12 DEBUG SplitServiceImpl split - return value is [, .]
13:46:12 DEBUG CharacterParser handleSplit - started
13:46:12 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:12 DEBUG SplitServiceImpl split - return value is [.]
13:46:12 DEBUG SentenceParser handleSplit - started
13:46:12 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Five. Six.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Five. Six., SENTENCE
13:46:12 DEBUG SplitServiceImpl split - return value is [Five., Six.]
13:46:12 DEBUG LexemeParser handleSplit - started
13:46:12 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Five.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Five., LEXEME
13:46:12 DEBUG SplitServiceImpl split - return value is [Five.]
13:46:12 DEBUG WordParser handleSplit - started
13:46:12 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Five.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Five., WORD
13:46:12 DEBUG SplitServiceImpl split - return value is [Five]
13:46:12 DEBUG CharacterParser handleSplit - started
13:46:12 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Five
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Five, CHARACTER
13:46:12 DEBUG SplitServiceImpl split - return value is [F, i, v, e]
13:46:12 DEBUG MarkParser handleSplit - started
13:46:12 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}]}, Five.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Five., MARK
13:46:12 DEBUG SplitServiceImpl split - return value is [, .]
13:46:12 DEBUG CharacterParser handleSplit - started
13:46:12 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:12 DEBUG SplitServiceImpl split - return value is [.]
13:46:12 DEBUG LexemeParser handleSplit - started
13:46:12 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Six.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Six., LEXEME
13:46:12 DEBUG SplitServiceImpl split - return value is [Six.]
13:46:12 DEBUG WordParser handleSplit - started
13:46:12 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Six.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Six., WORD
13:46:12 DEBUG SplitServiceImpl split - return value is [Six]
13:46:12 DEBUG CharacterParser handleSplit - started
13:46:12 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Six
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Six, CHARACTER
13:46:12 DEBUG SplitServiceImpl split - return value is [S, i, x]
13:46:12 DEBUG MarkParser handleSplit - started
13:46:12 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}]}, Six.
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are Six., MARK
13:46:12 DEBUG SplitServiceImpl split - return value is [, .]
13:46:12 DEBUG CharacterParser handleSplit - started
13:46:12 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:12 DEBUG SplitServiceImpl split - started
13:46:12 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:12 DEBUG SplitServiceImpl split - return value is [.]
13:46:12 DEBUG TextDAOImpl addTextObject - started
13:46:12 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:46:12 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:46:12 DEBUG SortServiceImpl sortLexemes - started
13:46:12 DEBUG SortServiceImpl sortLexemes - parameters are {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}, e
13:46:12 DEBUG SortServiceImpl sortLexemes - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:46:38 DEBUG TextServiceImpl createTree - started
13:46:38 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\one-two.txt
13:46:38 DEBUG TextDAOImpl readFile - started
13:46:38 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\one-two.txt
13:46:38 DEBUG TextDAOImpl readFile - return value is [One., Two. Three. Four., Five. Six.]
13:46:38 DEBUG ParagraphParser handleSplit - started
13:46:38 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, One.
Two. Three. Four.
Five. Six.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are One.
Two. Three. Four.
Five. Six., PARAGRAPH
13:46:38 DEBUG SplitServiceImpl split - return value is [One., Two. Three. Four., Five. Six.]
13:46:38 DEBUG SentenceParser handleSplit - started
13:46:38 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, One.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are One., SENTENCE
13:46:38 DEBUG SplitServiceImpl split - return value is [One.]
13:46:38 DEBUG LexemeParser handleSplit - started
13:46:38 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, One.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are One., LEXEME
13:46:38 DEBUG SplitServiceImpl split - return value is [One.]
13:46:38 DEBUG WordParser handleSplit - started
13:46:38 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, One.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are One., WORD
13:46:38 DEBUG SplitServiceImpl split - return value is [One]
13:46:38 DEBUG CharacterParser handleSplit - started
13:46:38 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, One
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are One, CHARACTER
13:46:38 DEBUG SplitServiceImpl split - return value is [O, n, e]
13:46:38 DEBUG MarkParser handleSplit - started
13:46:38 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}]}, One.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are One., MARK
13:46:38 DEBUG SplitServiceImpl split - return value is [, .]
13:46:38 DEBUG CharacterParser handleSplit - started
13:46:38 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:38 DEBUG SplitServiceImpl split - return value is [.]
13:46:38 DEBUG SentenceParser handleSplit - started
13:46:38 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Two. Three. Four.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Two. Three. Four., SENTENCE
13:46:38 DEBUG SplitServiceImpl split - return value is [Two., Three., Four.]
13:46:38 DEBUG LexemeParser handleSplit - started
13:46:38 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Two.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Two., LEXEME
13:46:38 DEBUG SplitServiceImpl split - return value is [Two.]
13:46:38 DEBUG WordParser handleSplit - started
13:46:38 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Two.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Two., WORD
13:46:38 DEBUG SplitServiceImpl split - return value is [Two]
13:46:38 DEBUG CharacterParser handleSplit - started
13:46:38 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Two
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Two, CHARACTER
13:46:38 DEBUG SplitServiceImpl split - return value is [T, w, o]
13:46:38 DEBUG MarkParser handleSplit - started
13:46:38 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}]}, Two.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Two., MARK
13:46:38 DEBUG SplitServiceImpl split - return value is [, .]
13:46:38 DEBUG CharacterParser handleSplit - started
13:46:38 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:38 DEBUG SplitServiceImpl split - return value is [.]
13:46:38 DEBUG LexemeParser handleSplit - started
13:46:38 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Three.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Three., LEXEME
13:46:38 DEBUG SplitServiceImpl split - return value is [Three.]
13:46:38 DEBUG WordParser handleSplit - started
13:46:38 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Three.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Three., WORD
13:46:38 DEBUG SplitServiceImpl split - return value is [Three]
13:46:38 DEBUG CharacterParser handleSplit - started
13:46:38 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Three
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Three, CHARACTER
13:46:38 DEBUG SplitServiceImpl split - return value is [T, h, r, e, e]
13:46:38 DEBUG MarkParser handleSplit - started
13:46:38 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}]}, Three.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Three., MARK
13:46:38 DEBUG SplitServiceImpl split - return value is [, .]
13:46:38 DEBUG CharacterParser handleSplit - started
13:46:38 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:38 DEBUG SplitServiceImpl split - return value is [.]
13:46:38 DEBUG LexemeParser handleSplit - started
13:46:38 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Four.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Four., LEXEME
13:46:38 DEBUG SplitServiceImpl split - return value is [Four.]
13:46:38 DEBUG WordParser handleSplit - started
13:46:38 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Four.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Four., WORD
13:46:38 DEBUG SplitServiceImpl split - return value is [Four]
13:46:38 DEBUG CharacterParser handleSplit - started
13:46:38 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Four
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Four, CHARACTER
13:46:38 DEBUG SplitServiceImpl split - return value is [F, o, u, r]
13:46:38 DEBUG MarkParser handleSplit - started
13:46:38 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}]}, Four.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Four., MARK
13:46:38 DEBUG SplitServiceImpl split - return value is [, .]
13:46:38 DEBUG CharacterParser handleSplit - started
13:46:38 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:38 DEBUG SplitServiceImpl split - return value is [.]
13:46:38 DEBUG SentenceParser handleSplit - started
13:46:38 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Five. Six.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Five. Six., SENTENCE
13:46:38 DEBUG SplitServiceImpl split - return value is [Five., Six.]
13:46:38 DEBUG LexemeParser handleSplit - started
13:46:38 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Five.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Five., LEXEME
13:46:38 DEBUG SplitServiceImpl split - return value is [Five.]
13:46:38 DEBUG WordParser handleSplit - started
13:46:38 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Five.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Five., WORD
13:46:38 DEBUG SplitServiceImpl split - return value is [Five]
13:46:38 DEBUG CharacterParser handleSplit - started
13:46:38 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Five
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Five, CHARACTER
13:46:38 DEBUG SplitServiceImpl split - return value is [F, i, v, e]
13:46:38 DEBUG MarkParser handleSplit - started
13:46:38 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}]}, Five.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Five., MARK
13:46:38 DEBUG SplitServiceImpl split - return value is [, .]
13:46:38 DEBUG CharacterParser handleSplit - started
13:46:38 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:38 DEBUG SplitServiceImpl split - return value is [.]
13:46:38 DEBUG LexemeParser handleSplit - started
13:46:38 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Six.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Six., LEXEME
13:46:38 DEBUG SplitServiceImpl split - return value is [Six.]
13:46:38 DEBUG WordParser handleSplit - started
13:46:38 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Six.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Six., WORD
13:46:38 DEBUG SplitServiceImpl split - return value is [Six]
13:46:38 DEBUG CharacterParser handleSplit - started
13:46:38 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Six
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Six, CHARACTER
13:46:38 DEBUG SplitServiceImpl split - return value is [S, i, x]
13:46:38 DEBUG MarkParser handleSplit - started
13:46:38 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}]}, Six.
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are Six., MARK
13:46:38 DEBUG SplitServiceImpl split - return value is [, .]
13:46:38 DEBUG CharacterParser handleSplit - started
13:46:38 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:38 DEBUG SplitServiceImpl split - started
13:46:38 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:38 DEBUG SplitServiceImpl split - return value is [.]
13:46:38 DEBUG TextDAOImpl addTextObject - started
13:46:38 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:46:38 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:46:38 DEBUG SortServiceImpl sortLexemes - started
13:46:38 DEBUG SortServiceImpl sortLexemes - parameters are {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}, e
13:46:38 DEBUG SortServiceImpl sortLexemes - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:46:58 DEBUG TextServiceImpl createTree - started
13:46:58 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\one-two.txt
13:46:58 DEBUG TextDAOImpl readFile - started
13:46:58 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\one-two.txt
13:46:58 DEBUG TextDAOImpl readFile - return value is [One., Two. Three. Four., Five. Six.]
13:46:58 DEBUG ParagraphParser handleSplit - started
13:46:58 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, One.
Two. Three. Four.
Five. Six.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are One.
Two. Three. Four.
Five. Six., PARAGRAPH
13:46:58 DEBUG SplitServiceImpl split - return value is [One., Two. Three. Four., Five. Six.]
13:46:58 DEBUG SentenceParser handleSplit - started
13:46:58 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, One.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are One., SENTENCE
13:46:58 DEBUG SplitServiceImpl split - return value is [One.]
13:46:58 DEBUG LexemeParser handleSplit - started
13:46:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, One.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are One., LEXEME
13:46:58 DEBUG SplitServiceImpl split - return value is [One.]
13:46:58 DEBUG WordParser handleSplit - started
13:46:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, One.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are One., WORD
13:46:58 DEBUG SplitServiceImpl split - return value is [One]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, One
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are One, CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [O, n, e]
13:46:58 DEBUG MarkParser handleSplit - started
13:46:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}]}, One.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are One., MARK
13:46:58 DEBUG SplitServiceImpl split - return value is [, .]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [.]
13:46:58 DEBUG SentenceParser handleSplit - started
13:46:58 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Two. Three. Four.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Two. Three. Four., SENTENCE
13:46:58 DEBUG SplitServiceImpl split - return value is [Two., Three., Four.]
13:46:58 DEBUG LexemeParser handleSplit - started
13:46:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Two.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Two., LEXEME
13:46:58 DEBUG SplitServiceImpl split - return value is [Two.]
13:46:58 DEBUG WordParser handleSplit - started
13:46:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Two.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Two., WORD
13:46:58 DEBUG SplitServiceImpl split - return value is [Two]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Two
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Two, CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [T, w, o]
13:46:58 DEBUG MarkParser handleSplit - started
13:46:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}]}, Two.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Two., MARK
13:46:58 DEBUG SplitServiceImpl split - return value is [, .]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [.]
13:46:58 DEBUG LexemeParser handleSplit - started
13:46:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Three.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Three., LEXEME
13:46:58 DEBUG SplitServiceImpl split - return value is [Three.]
13:46:58 DEBUG WordParser handleSplit - started
13:46:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Three.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Three., WORD
13:46:58 DEBUG SplitServiceImpl split - return value is [Three]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Three
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Three, CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [T, h, r, e, e]
13:46:58 DEBUG MarkParser handleSplit - started
13:46:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}]}, Three.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Three., MARK
13:46:58 DEBUG SplitServiceImpl split - return value is [, .]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [.]
13:46:58 DEBUG LexemeParser handleSplit - started
13:46:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Four.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Four., LEXEME
13:46:58 DEBUG SplitServiceImpl split - return value is [Four.]
13:46:58 DEBUG WordParser handleSplit - started
13:46:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Four.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Four., WORD
13:46:58 DEBUG SplitServiceImpl split - return value is [Four]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Four
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Four, CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [F, o, u, r]
13:46:58 DEBUG MarkParser handleSplit - started
13:46:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}]}, Four.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Four., MARK
13:46:58 DEBUG SplitServiceImpl split - return value is [, .]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [.]
13:46:58 DEBUG SentenceParser handleSplit - started
13:46:58 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Five. Six.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Five. Six., SENTENCE
13:46:58 DEBUG SplitServiceImpl split - return value is [Five., Six.]
13:46:58 DEBUG LexemeParser handleSplit - started
13:46:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Five.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Five., LEXEME
13:46:58 DEBUG SplitServiceImpl split - return value is [Five.]
13:46:58 DEBUG WordParser handleSplit - started
13:46:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Five.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Five., WORD
13:46:58 DEBUG SplitServiceImpl split - return value is [Five]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Five
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Five, CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [F, i, v, e]
13:46:58 DEBUG MarkParser handleSplit - started
13:46:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}]}, Five.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Five., MARK
13:46:58 DEBUG SplitServiceImpl split - return value is [, .]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [.]
13:46:58 DEBUG LexemeParser handleSplit - started
13:46:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Six.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Six., LEXEME
13:46:58 DEBUG SplitServiceImpl split - return value is [Six.]
13:46:58 DEBUG WordParser handleSplit - started
13:46:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Six.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Six., WORD
13:46:58 DEBUG SplitServiceImpl split - return value is [Six]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Six
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Six, CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [S, i, x]
13:46:58 DEBUG MarkParser handleSplit - started
13:46:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}]}, Six.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Six., MARK
13:46:58 DEBUG SplitServiceImpl split - return value is [, .]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [.]
13:46:58 DEBUG TextDAOImpl addTextObject - started
13:46:58 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:46:58 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:46:58 DEBUG SortServiceImpl sortLexemes - started
13:46:58 DEBUG SortServiceImpl sortLexemes - parameters are {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}, e
13:46:58 DEBUG SortServiceImpl sortLexemes - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:46:58 DEBUG TextServiceImpl createTree - started
13:46:58 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\one-two.txt
13:46:58 DEBUG TextDAOImpl readFile - started
13:46:58 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\one-two.txt
13:46:58 DEBUG TextDAOImpl readFile - return value is [One., Two. Three. Four., Five. Six.]
13:46:58 DEBUG ParagraphParser handleSplit - started
13:46:58 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, One.
Two. Three. Four.
Five. Six.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are One.
Two. Three. Four.
Five. Six., PARAGRAPH
13:46:58 DEBUG SplitServiceImpl split - return value is [One., Two. Three. Four., Five. Six.]
13:46:58 DEBUG SentenceParser handleSplit - started
13:46:58 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, One.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are One., SENTENCE
13:46:58 DEBUG SplitServiceImpl split - return value is [One.]
13:46:58 DEBUG LexemeParser handleSplit - started
13:46:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, One.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are One., LEXEME
13:46:58 DEBUG SplitServiceImpl split - return value is [One.]
13:46:58 DEBUG WordParser handleSplit - started
13:46:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, One.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are One., WORD
13:46:58 DEBUG SplitServiceImpl split - return value is [One]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, One
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are One, CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [O, n, e]
13:46:58 DEBUG MarkParser handleSplit - started
13:46:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}]}, One.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are One., MARK
13:46:58 DEBUG SplitServiceImpl split - return value is [, .]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [.]
13:46:58 DEBUG SentenceParser handleSplit - started
13:46:58 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Two. Three. Four.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Two. Three. Four., SENTENCE
13:46:58 DEBUG SplitServiceImpl split - return value is [Two., Three., Four.]
13:46:58 DEBUG LexemeParser handleSplit - started
13:46:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Two.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Two., LEXEME
13:46:58 DEBUG SplitServiceImpl split - return value is [Two.]
13:46:58 DEBUG WordParser handleSplit - started
13:46:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Two.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Two., WORD
13:46:58 DEBUG SplitServiceImpl split - return value is [Two]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Two
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Two, CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [T, w, o]
13:46:58 DEBUG MarkParser handleSplit - started
13:46:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}]}, Two.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Two., MARK
13:46:58 DEBUG SplitServiceImpl split - return value is [, .]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [.]
13:46:58 DEBUG LexemeParser handleSplit - started
13:46:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Three.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Three., LEXEME
13:46:58 DEBUG SplitServiceImpl split - return value is [Three.]
13:46:58 DEBUG WordParser handleSplit - started
13:46:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Three.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Three., WORD
13:46:58 DEBUG SplitServiceImpl split - return value is [Three]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Three
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Three, CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [T, h, r, e, e]
13:46:58 DEBUG MarkParser handleSplit - started
13:46:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}]}, Three.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Three., MARK
13:46:58 DEBUG SplitServiceImpl split - return value is [, .]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [.]
13:46:58 DEBUG LexemeParser handleSplit - started
13:46:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Four.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Four., LEXEME
13:46:58 DEBUG SplitServiceImpl split - return value is [Four.]
13:46:58 DEBUG WordParser handleSplit - started
13:46:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Four.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Four., WORD
13:46:58 DEBUG SplitServiceImpl split - return value is [Four]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Four
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Four, CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [F, o, u, r]
13:46:58 DEBUG MarkParser handleSplit - started
13:46:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}]}, Four.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Four., MARK
13:46:58 DEBUG SplitServiceImpl split - return value is [, .]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [.]
13:46:58 DEBUG SentenceParser handleSplit - started
13:46:58 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Five. Six.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Five. Six., SENTENCE
13:46:58 DEBUG SplitServiceImpl split - return value is [Five., Six.]
13:46:58 DEBUG LexemeParser handleSplit - started
13:46:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Five.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Five., LEXEME
13:46:58 DEBUG SplitServiceImpl split - return value is [Five.]
13:46:58 DEBUG WordParser handleSplit - started
13:46:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Five.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Five., WORD
13:46:58 DEBUG SplitServiceImpl split - return value is [Five]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Five
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Five, CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [F, i, v, e]
13:46:58 DEBUG MarkParser handleSplit - started
13:46:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}]}, Five.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Five., MARK
13:46:58 DEBUG SplitServiceImpl split - return value is [, .]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [.]
13:46:58 DEBUG LexemeParser handleSplit - started
13:46:58 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Six.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Six., LEXEME
13:46:58 DEBUG SplitServiceImpl split - return value is [Six.]
13:46:58 DEBUG WordParser handleSplit - started
13:46:58 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Six.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Six., WORD
13:46:58 DEBUG SplitServiceImpl split - return value is [Six]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Six
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Six, CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [S, i, x]
13:46:58 DEBUG MarkParser handleSplit - started
13:46:58 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}]}, Six.
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are Six., MARK
13:46:58 DEBUG SplitServiceImpl split - return value is [, .]
13:46:58 DEBUG CharacterParser handleSplit - started
13:46:58 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
13:46:58 DEBUG SplitServiceImpl split - started
13:46:58 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
13:46:58 DEBUG SplitServiceImpl split - return value is [.]
13:46:58 DEBUG TextDAOImpl addTextObject - started
13:46:58 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:46:58 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:46:58 DEBUG SortServiceImpl sortParagraphs - started
13:46:58 DEBUG SortServiceImpl sortParagraphs - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}]}
13:46:58 DEBUG SortServiceImpl sortParagraphs - return value is [{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{O}, {n}, {e}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {i}, {v}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{S}, {i}, {x}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {w}, {o}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {r}, {e}, {e}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{F}, {o}, {u}, {r}]}, {type=MARK, components=[{.}]}]}]}]}]
13:46:58 DEBUG SortServiceImpl sortWords - started
13:46:58 DEBUG SortServiceImpl sortWords - parameter is It is a established fact that a reader will be of a page when looking at its layout.
13:46:58 DEBUG SortServiceImpl sortWords - return value is [a, a, a, It, is, be, of, at, its, fact, that, will, page, when, reader, layout, looking, established]
13:47:10 DEBUG SplitServiceImpl split - started
13:47:10 DEBUG SplitServiceImpl split - parameters are One.
Two.
Three!, PARAGRAPH
13:47:10 DEBUG SplitServiceImpl split - return value is [One., Two., Three!]
13:47:10 DEBUG SplitServiceImpl split - started
13:47:10 DEBUG SplitServiceImpl split - parameters are One. Two., SENTENCE
13:47:10 DEBUG SplitServiceImpl split - return value is [One., Two.]
13:47:10 DEBUG SplitServiceImpl split - started
13:47:10 DEBUG SplitServiceImpl split - parameters are One, two., LEXEME
13:47:10 DEBUG SplitServiceImpl split - return value is [One,, two.]
13:47:10 DEBUG SplitServiceImpl split - started
13:47:10 DEBUG SplitServiceImpl split - parameters are One, two., WORD
13:47:10 DEBUG SplitServiceImpl split - return value is [One, two]
13:47:10 DEBUG SplitServiceImpl split - started
13:47:10 DEBUG SplitServiceImpl split - parameters are One, two., MARK
13:47:10 DEBUG SplitServiceImpl split - return value is [, ,, .]
13:47:10 DEBUG SplitServiceImpl split - started
13:47:10 DEBUG SplitServiceImpl split - parameters are One., CHARACTER
13:47:10 DEBUG SplitServiceImpl split - return value is [O, n, e, .]
18:48:10 INFO  Runner main - Program has started
18:48:10 DEBUG Controller executeTask - started
18:48:10 DEBUG Reader readCommand - started
18:48:13 DEBUG Reader readCommand - return value is CREATE
18:48:13 DEBUG Create execute - started
18:48:13 DEBUG Reader readPathname - started
18:48:21 DEBUG Reader readPathname - return value is E:\24_JavaST\task11\target\files\empty.txt
18:48:21 DEBUG TextServiceImpl createTree - started
18:48:21 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\empty.txt
18:48:21 DEBUG TextDAOImpl readFile - started
18:48:21 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\empty.txt
18:48:21 ERROR Controller executeTask - by.avdeev.task11.service.ServiceException: by.avdeev.task11.dao.DAOException: File is empty
18:48:23 DEBUG Controller executeTask - started
18:48:23 DEBUG Reader readCommand - started
18:48:39 DEBUG Reader readCommand - return value is create
18:48:39 DEBUG Create execute - started
18:48:39 DEBUG Reader readPathname - started
18:48:40 DEBUG Reader readPathname - return value is E:\\24_JavaST\\task11\\target\\files\\empty.txt
18:48:40 DEBUG TextServiceImpl createTree - started
18:48:40 DEBUG TextServiceImpl createTree - parameter is E:\\24_JavaST\\task11\\target\\files\\empty.txt
18:48:40 DEBUG TextDAOImpl readFile - started
18:48:40 DEBUG TextDAOImpl readFile - parameter is E:\\24_JavaST\\task11\\target\\files\\empty.txt
18:48:40 ERROR Controller executeTask - by.avdeev.task11.service.ServiceException: by.avdeev.task11.dao.DAOException: File is empty
18:48:45 DEBUG Controller executeTask - started
18:48:45 DEBUG Reader readCommand - started
18:48:48 DEBUG Reader readCommand - return value is create
18:48:48 DEBUG Create execute - started
18:48:48 DEBUG Reader readPathname - started
18:48:54 DEBUG Reader readPathname - return value is E:\24_JavaST\task11\target\files\test.txt
18:48:54 DEBUG TextServiceImpl createTree - started
18:48:54 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\test.txt
18:48:54 DEBUG TextDAOImpl readFile - started
18:48:54 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\test.txt
18:48:54 DEBUG TextDAOImpl readFile - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., It is a established fact that a reader will be of a page when looking at its layout., Bye...]
18:48:54 DEBUG ParagraphParser handleSplit - started
18:48:54 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye...
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye..., PARAGRAPH
18:48:54 DEBUG SplitServiceImpl split - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., It is a established fact that a reader will be of a page when looking at its layout., Bye...]
18:48:54 DEBUG SentenceParser handleSplit - started
18:48:54 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., SENTENCE
18:48:54 DEBUG SplitServiceImpl split - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged., It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.]
18:48:54 DEBUG LexemeParser handleSplit - started
18:48:54 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged., LEXEME
18:48:54 DEBUG SplitServiceImpl split - return value is [It, has, survived, not, only, five, centuries,, but, also, the, leap, into, electronic, typesetting,, remaining, essentially, unchanged.]
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [It]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [I, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, has
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are has, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [has]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, has
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are has, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [h, a, s]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, has
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are has, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, survived
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are survived, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [survived]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, survived
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are survived, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [s, u, r, v, i, v, e, d]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, survived
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are survived, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, not
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are not, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [not]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, not
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are not, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [n, o, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, not
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are not, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, only
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are only, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [only]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, only
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are only, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [o, n, l, y]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, only
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are only, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, five
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are five, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [five]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, five
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are five, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [f, i, v, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, five
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are five, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, centuries,
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are centuries,, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [centuries]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, centuries
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are centuries, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [c, e, n, t, u, r, i, e, s]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}]}, centuries,
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are centuries,, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is [, ,]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [,]
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, but
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are but, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [but]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, but
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are but, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [b, u, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, but
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are but, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, also
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are also, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [also]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, also
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are also, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [a, l, s, o]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, also
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are also, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are the, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [the]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [t, h, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are the, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, leap
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are leap, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [leap]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, leap
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are leap, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [l, e, a, p]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, leap
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are leap, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, into
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are into, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [into]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, into
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are into, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [i, n, t, o]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, into
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are into, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, electronic
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are electronic, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [electronic]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, electronic
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are electronic, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [e, l, e, c, t, r, o, n, i, c]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, electronic
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are electronic, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, typesetting,
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are typesetting,, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [typesetting]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, typesetting
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are typesetting, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [t, y, p, e, s, e, t, t, i, n, g]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}]}, typesetting,
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are typesetting,, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is [, ,]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [,]
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, remaining
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are remaining, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [remaining]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, remaining
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are remaining, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [r, e, m, a, i, n, i, n, g]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, remaining
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are remaining, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, essentially
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are essentially, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [essentially]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, essentially
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are essentially, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [e, s, s, e, n, t, i, a, l, l, y]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, essentially
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are essentially, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, unchanged.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are unchanged., WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [unchanged]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, unchanged
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are unchanged, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [u, n, c, h, a, n, g, e, d]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}]}, unchanged.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are unchanged., MARK
18:48:54 DEBUG SplitServiceImpl split - return value is [, .]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [.]
18:48:54 DEBUG LexemeParser handleSplit - started
18:48:54 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., LEXEME
18:48:54 DEBUG SplitServiceImpl split - return value is [It, was, popularised, in, the, with, the, release, of, Letraset, sheets, containing, Lorem, Ipsum, passages,, and, more, recently, withdesktop, publishing, software, like, Aldus, PageMaker, including, versions, of, Lorem, Ipsum.]
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [It]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [I, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, was
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are was, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [was]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, was
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are was, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [w, a, s]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, was
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are was, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, popularised
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are popularised, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [popularised]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, popularised
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are popularised, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [p, o, p, u, l, a, r, i, s, e, d]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, popularised
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are popularised, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, in
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are in, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [in]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, in
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are in, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [i, n]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, in
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are in, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are the, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [the]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [t, h, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are the, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, with
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are with, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [with]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, with
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are with, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [w, i, t, h]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, with
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are with, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are the, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [the]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [t, h, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are the, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, release
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are release, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [release]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, release
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are release, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [r, e, l, e, a, s, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, release
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are release, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [of]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [o, f]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Letraset
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Letraset, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [Letraset]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Letraset
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Letraset, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [L, e, t, r, a, s, e, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, Letraset
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Letraset, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, sheets
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are sheets, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [sheets]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, sheets
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are sheets, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [s, h, e, e, t, s]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, sheets
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are sheets, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, containing
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are containing, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [containing]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, containing
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are containing, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [c, o, n, t, a, i, n, i, n, g]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, containing
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are containing, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Lorem
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Lorem, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [Lorem]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Lorem
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Lorem, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [L, o, r, e, m]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, Lorem
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Lorem, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Ipsum, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [Ipsum]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Ipsum, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, passages,
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are passages,, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [passages]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, passages
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are passages, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [p, a, s, s, a, g, e, s]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}]}, passages,
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are passages,, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is [, ,]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [,]
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, and
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are and, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [and]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, and
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are and, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [a, n, d]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, and
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are and, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, more
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are more, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [more]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, more
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are more, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [m, o, r, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, more
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are more, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, recently
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are recently, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [recently]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, recently
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are recently, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [r, e, c, e, n, t, l, y]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, recently
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are recently, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, withdesktop
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are withdesktop, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [withdesktop]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, withdesktop
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are withdesktop, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [w, i, t, h, d, e, s, k, t, o, p]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, withdesktop
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are withdesktop, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, publishing
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are publishing, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [publishing]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, publishing
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are publishing, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [p, u, b, l, i, s, h, i, n, g]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, publishing
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are publishing, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, software
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are software, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [software]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, software
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are software, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [s, o, f, t, w, a, r, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, software
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are software, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, like
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are like, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [like]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, like
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are like, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [l, i, k, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, like
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are like, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Aldus
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Aldus, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [Aldus]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Aldus
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Aldus, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [A, l, d, u, s]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, Aldus
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Aldus, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, PageMaker
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are PageMaker, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [PageMaker]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, PageMaker
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are PageMaker, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [P, a, g, e, M, a, k, e, r]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, PageMaker
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are PageMaker, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, including
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are including, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [including]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, including
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are including, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [i, n, c, l, u, d, i, n, g]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, including
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are including, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, versions
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are versions, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [versions]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, versions
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are versions, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [v, e, r, s, i, o, n, s]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, versions
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are versions, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [of]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [o, f]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Lorem
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Lorem, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [Lorem]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Lorem
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Lorem, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [L, o, r, e, m]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, Lorem
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Lorem, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Ipsum., WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [Ipsum]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Ipsum., MARK
18:48:54 DEBUG SplitServiceImpl split - return value is [, .]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [.]
18:48:54 DEBUG SentenceParser handleSplit - started
18:48:54 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., SENTENCE
18:48:54 DEBUG SplitServiceImpl split - return value is [It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout., The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.]
18:48:54 DEBUG LexemeParser handleSplit - started
18:48:54 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout., LEXEME
18:48:54 DEBUG SplitServiceImpl split - return value is [It, is, a, long, established, fact, that, a, reader, will, be, distracted, by, the, readable, content, of, a, page, when, looking, at, its, layout.]
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [It]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [I, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are is, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [is]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [i, s]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are is, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [a]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [a]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, long
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are long, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [long]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, long
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are long, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [l, o, n, g]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, long
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are long, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, established
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are established, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [established]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, established
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are established, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [e, s, t, a, b, l, i, s, h, e, d]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, established
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are established, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, fact
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are fact, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [fact]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, fact
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are fact, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [f, a, c, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, fact
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are fact, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are that, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [that]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are that, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [a]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [a]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, reader
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are reader, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [reader]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, reader
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are reader, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [r, e, a, d, e, r]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, reader
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are reader, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, will
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are will, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [will]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, will
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are will, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [w, i, l, l]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, will
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are will, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, be
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are be, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [be]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, be
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are be, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [b, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, be
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are be, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, distracted
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are distracted, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [distracted]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, distracted
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are distracted, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [d, i, s, t, r, a, c, t, e, d]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, distracted
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are distracted, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, by
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are by, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [by]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, by
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are by, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [b, y]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, by
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are by, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are the, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [the]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [t, h, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are the, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, readable
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are readable, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [readable]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, readable
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are readable, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [r, e, a, d, a, b, l, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, readable
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are readable, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, content
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are content, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [content]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, content
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are content, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [c, o, n, t, e, n, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, content
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are content, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [of]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [o, f]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [a]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [a]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, page
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are page, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [page]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, page
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are page, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [p, a, g, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, page
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are page, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, when
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are when, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [when]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, when
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are when, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [w, h, e, n]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, when
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are when, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, looking
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are looking, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [looking]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, looking
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are looking, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [l, o, o, k, i, n, g]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, looking
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are looking, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, at
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are at, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [at]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, at
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are at, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [a, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, at
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are at, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, its
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are its, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [its]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, its
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are its, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [i, t, s]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, its
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are its, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, layout.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are layout., WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [layout]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, layout
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are layout, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [l, a, y, o, u, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}]}, layout.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are layout., MARK
18:48:54 DEBUG SplitServiceImpl split - return value is [, .]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [.]
18:48:54 DEBUG LexemeParser handleSplit - started
18:48:54 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., LEXEME
18:48:54 DEBUG SplitServiceImpl split - return value is [The, point, of, using, Ipsum, is, that, it, has, a, more-or-less, normal, distribution, of, letters,, as, opposed, to, using, 'Content, here,, content, here',, making, it, look, like, readable, English.]
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, The
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are The, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [The]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, The
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are The, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [T, h, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, The
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are The, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, point
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are point, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [point]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, point
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are point, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [p, o, i, n, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, point
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are point, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [of]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [o, f]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, using
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are using, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [using]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, using
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are using, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [u, s, i, n, g]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, using
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are using, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Ipsum, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [Ipsum]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Ipsum, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are is, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [is]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [i, s]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are is, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are that, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [that]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are that, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, it
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are it, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [it]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, it
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are it, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [i, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, it
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are it, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, has
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are has, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [has]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, has
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are has, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [h, a, s]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, has
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are has, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [a]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [a]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, more-or-less
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are more-or-less, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [more-or-less]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, more-or-less
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are more-or-less, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [m, o, r, e, -, o, r, -, l, e, s, s]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, more-or-less
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are more-or-less, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, normal
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are normal, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [normal]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, normal
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are normal, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [n, o, r, m, a, l]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, normal
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are normal, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, distribution
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are distribution, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [distribution]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, distribution
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are distribution, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [d, i, s, t, r, i, b, u, t, i, o, n]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, distribution
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are distribution, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [of]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [o, f]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, letters,
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are letters,, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [letters]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, letters
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are letters, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [l, e, t, t, e, r, s]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}]}, letters,
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are letters,, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is [, ,]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [,]
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, as
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are as, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [as]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, as
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are as, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [a, s]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, as
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are as, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, opposed
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are opposed, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [opposed]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, opposed
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are opposed, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [o, p, p, o, s, e, d]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, opposed
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are opposed, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, to
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are to, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [to]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, to
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are to, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [t, o]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, to
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are to, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, using
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are using, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [using]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, using
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are using, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [u, s, i, n, g]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, using
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are using, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[]}, 'Content
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are 'Content, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is [']
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, '
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are ', CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [']
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[{type=MARK, components=[{'}]}]}, 'Content
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are 'Content, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [, Content]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, 
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are , CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Content
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Content, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [C, o, n, t, e, n, t]
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, here,
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are here,, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [here]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, here
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are here, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [h, e, r, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}]}, here,
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are here,, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is [, ,]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [,]
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, content
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are content, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [content]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, content
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are content, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [c, o, n, t, e, n, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, content
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are content, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, here',
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are here',, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [here]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, here
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are here, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [h, e, r, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}]}, here',
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are here',, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is [, ',]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ',
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are ',, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [', ,]
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, making
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are making, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [making]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, making
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are making, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [m, a, k, i, n, g]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, making
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are making, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, it
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are it, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [it]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, it
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are it, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [i, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, it
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are it, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, look
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are look, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [look]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, look
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are look, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [l, o, o, k]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, look
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are look, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, like
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are like, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [like]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, like
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are like, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [l, i, k, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, like
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are like, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, readable
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are readable, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [readable]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, readable
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are readable, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [r, e, a, d, a, b, l, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, readable
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are readable, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, English.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are English., WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [English]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, English
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are English, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [E, n, g, l, i, s, h]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}]}, English.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are English., MARK
18:48:54 DEBUG SplitServiceImpl split - return value is [, .]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [.]
18:48:54 DEBUG SentenceParser handleSplit - started
18:48:54 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It is a established fact that a reader will be of a page when looking at its layout.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It is a established fact that a reader will be of a page when looking at its layout., SENTENCE
18:48:54 DEBUG SplitServiceImpl split - return value is [It is a established fact that a reader will be of a page when looking at its layout.]
18:48:54 DEBUG LexemeParser handleSplit - started
18:48:54 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, It is a established fact that a reader will be of a page when looking at its layout.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It is a established fact that a reader will be of a page when looking at its layout., LEXEME
18:48:54 DEBUG SplitServiceImpl split - return value is [It, is, a, established, fact, that, a, reader, will, be, of, a, page, when, looking, at, its, layout.]
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [It]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [I, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are It, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are is, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [is]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [i, s]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are is, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [a]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [a]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, established
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are established, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [established]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, established
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are established, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [e, s, t, a, b, l, i, s, h, e, d]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, established
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are established, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, fact
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are fact, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [fact]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, fact
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are fact, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [f, a, c, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, fact
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are fact, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are that, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [that]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are that, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [a]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [a]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, reader
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are reader, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [reader]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, reader
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are reader, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [r, e, a, d, e, r]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, reader
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are reader, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, will
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are will, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [will]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, will
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are will, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [w, i, l, l]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, will
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are will, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, be
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are be, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [be]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, be
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are be, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [b, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, be
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are be, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [of]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [o, f]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are of, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [a]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [a]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are a, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, page
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are page, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [page]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, page
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are page, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [p, a, g, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, page
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are page, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, when
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are when, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [when]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, when
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are when, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [w, h, e, n]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, when
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are when, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, looking
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are looking, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [looking]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, looking
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are looking, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [l, o, o, k, i, n, g]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, looking
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are looking, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, at
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are at, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [at]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, at
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are at, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [a, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, at
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are at, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, its
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are its, WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [its]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, its
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are its, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [i, t, s]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, its
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are its, MARK
18:48:54 DEBUG SplitServiceImpl split - return value is []
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, layout.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are layout., WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [layout]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, layout
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are layout, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [l, a, y, o, u, t]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}]}, layout.
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are layout., MARK
18:48:54 DEBUG SplitServiceImpl split - return value is [, .]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [.]
18:48:54 DEBUG SentenceParser handleSplit - started
18:48:54 DEBUG SentenceParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Bye...
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Bye..., SENTENCE
18:48:54 DEBUG SplitServiceImpl split - return value is [Bye...]
18:48:54 DEBUG LexemeParser handleSplit - started
18:48:54 DEBUG LexemeParser handleSplit - parameters are {type=SENTENCE, components=[]}, Bye...
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Bye..., LEXEME
18:48:54 DEBUG SplitServiceImpl split - return value is [Bye...]
18:48:54 DEBUG WordParser handleSplit - started
18:48:54 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Bye...
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Bye..., WORD
18:48:54 DEBUG SplitServiceImpl split - return value is [Bye]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Bye
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Bye, CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [B, y, e]
18:48:54 DEBUG MarkParser handleSplit - started
18:48:54 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}]}, Bye...
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are Bye..., MARK
18:48:54 DEBUG SplitServiceImpl split - return value is [, ...]
18:48:54 DEBUG CharacterParser handleSplit - started
18:48:54 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ...
18:48:54 DEBUG SplitServiceImpl split - started
18:48:54 DEBUG SplitServiceImpl split - parameters are ..., CHARACTER
18:48:54 DEBUG SplitServiceImpl split - return value is [., ., .]
18:48:54 DEBUG TextDAOImpl addTextObject - started
18:48:54 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}
18:48:54 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}
18:48:54 DEBUG Printer printTextObject - started
18:48:54 DEBUG Printer printTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}]}, {type=PARAGRAPH, components=[{type=SENTENCE, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}]}
19:27:30 INFO  Runner main - Program has started
19:27:30 DEBUG Controller executeTask - started
19:27:30 DEBUG Reader readCommand - started
19:27:43 DEBUG Reader readCommand - return value is create
19:27:43 DEBUG Create execute - started
19:27:43 DEBUG Reader readPathname - started
19:27:52 DEBUG Reader readPathname - return value is E:\24_JavaST\task11\target\files\text.txt
19:27:52 DEBUG TextServiceImpl createTree - started
19:27:52 DEBUG TextServiceImpl createTree - parameter is E:\24_JavaST\task11\target\files\text.txt
19:27:52 DEBUG TextDAOImpl readFile - started
19:27:52 DEBUG TextDAOImpl readFile - parameter is E:\24_JavaST\task11\target\files\text.txt
19:27:52 DEBUG TextDAOImpl readFile - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., It is a established fact that a reader will be of a page when looking at its layout., Bye...]
19:27:52 DEBUG ParagraphParser handleSplit - started
19:27:52 DEBUG ParagraphParser handleSplit - parameters are {type=TEXT, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye...
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
It is a established fact that a reader will be of a page when looking at its layout.
Bye..., PARAGRAPH
19:27:52 DEBUG SplitServiceImpl split - return value is [It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., It is a established fact that a reader will be of a page when looking at its layout., Bye...]
19:27:52 DEBUG LexemeParser handleSplit - started
19:27:52 DEBUG LexemeParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the with the release of Letraset sheets containing Lorem Ipsum passages, and more recently withdesktop publishing software like Aldus PageMaker including versions of Lorem Ipsum., LEXEME
19:27:52 DEBUG SplitServiceImpl split - return value is [It, has, survived, not, only, five, centuries,, but, also, the, leap, into, electronic, typesetting,, remaining, essentially, unchanged., It, was, popularised, in, the, with, the, release, of, Letraset, sheets, containing, Lorem, Ipsum, passages,, and, more, recently, withdesktop, publishing, software, like, Aldus, PageMaker, including, versions, of, Lorem, Ipsum.]
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are It, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [It]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [I, t]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are It, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, has
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are has, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [has]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, has
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are has, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [h, a, s]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, has
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are has, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, survived
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are survived, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [survived]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, survived
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are survived, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [s, u, r, v, i, v, e, d]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, survived
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are survived, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, not
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are not, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [not]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, not
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are not, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [n, o, t]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, not
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are not, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, only
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are only, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [only]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, only
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are only, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [o, n, l, y]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, only
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are only, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, five
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are five, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [five]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, five
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are five, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [f, i, v, e]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, five
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are five, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, centuries,
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are centuries,, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [centuries]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, centuries
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are centuries, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [c, e, n, t, u, r, i, e, s]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}]}, centuries,
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are centuries,, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is [, ,]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [,]
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, but
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are but, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [but]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, but
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are but, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [b, u, t]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, but
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are but, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, also
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are also, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [also]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, also
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are also, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [a, l, s, o]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, also
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are also, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are the, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [the]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [t, h, e]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are the, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, leap
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are leap, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [leap]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, leap
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are leap, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [l, e, a, p]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, leap
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are leap, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, into
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are into, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [into]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, into
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are into, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [i, n, t, o]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, into
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are into, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, electronic
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are electronic, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [electronic]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, electronic
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are electronic, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [e, l, e, c, t, r, o, n, i, c]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, electronic
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are electronic, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, typesetting,
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are typesetting,, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [typesetting]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, typesetting
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are typesetting, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [t, y, p, e, s, e, t, t, i, n, g]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}]}, typesetting,
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are typesetting,, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is [, ,]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [,]
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, remaining
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are remaining, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [remaining]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, remaining
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are remaining, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [r, e, m, a, i, n, i, n, g]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, remaining
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are remaining, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, essentially
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are essentially, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [essentially]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, essentially
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are essentially, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [e, s, s, e, n, t, i, a, l, l, y]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, essentially
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are essentially, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, unchanged.
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are unchanged., WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [unchanged]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, unchanged
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are unchanged, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [u, n, c, h, a, n, g, e, d]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}]}, unchanged.
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are unchanged., MARK
19:27:52 DEBUG SplitServiceImpl split - return value is [, .]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [.]
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are It, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [It]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [I, t]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are It, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, was
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are was, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [was]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, was
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are was, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [w, a, s]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, was
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are was, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, popularised
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are popularised, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [popularised]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, popularised
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are popularised, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [p, o, p, u, l, a, r, i, s, e, d]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, popularised
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are popularised, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, in
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are in, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [in]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, in
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are in, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [i, n]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, in
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are in, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are the, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [the]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [t, h, e]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are the, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, with
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are with, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [with]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, with
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are with, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [w, i, t, h]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, with
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are with, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are the, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [the]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [t, h, e]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are the, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, release
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are release, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [release]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, release
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are release, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [r, e, l, e, a, s, e]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, release
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are release, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are of, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [of]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [o, f]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are of, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Letraset
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Letraset, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [Letraset]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Letraset
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Letraset, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [L, e, t, r, a, s, e, t]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, Letraset
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Letraset, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, sheets
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are sheets, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [sheets]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, sheets
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are sheets, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [s, h, e, e, t, s]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, sheets
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are sheets, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, containing
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are containing, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [containing]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, containing
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are containing, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [c, o, n, t, a, i, n, i, n, g]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, containing
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are containing, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Lorem
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Lorem, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [Lorem]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Lorem
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Lorem, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [L, o, r, e, m]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, Lorem
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Lorem, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Ipsum, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [Ipsum]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Ipsum, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, passages,
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are passages,, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [passages]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, passages
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are passages, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [p, a, s, s, a, g, e, s]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}]}, passages,
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are passages,, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is [, ,]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [,]
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, and
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are and, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [and]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, and
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are and, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [a, n, d]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, and
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are and, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, more
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are more, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [more]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, more
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are more, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [m, o, r, e]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, more
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are more, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, recently
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are recently, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [recently]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, recently
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are recently, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [r, e, c, e, n, t, l, y]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, recently
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are recently, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, withdesktop
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are withdesktop, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [withdesktop]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, withdesktop
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are withdesktop, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [w, i, t, h, d, e, s, k, t, o, p]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, withdesktop
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are withdesktop, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, publishing
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are publishing, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [publishing]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, publishing
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are publishing, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [p, u, b, l, i, s, h, i, n, g]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, publishing
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are publishing, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, software
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are software, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [software]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, software
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are software, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [s, o, f, t, w, a, r, e]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, software
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are software, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, like
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are like, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [like]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, like
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are like, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [l, i, k, e]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, like
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are like, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Aldus
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Aldus, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [Aldus]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Aldus
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Aldus, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [A, l, d, u, s]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, Aldus
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Aldus, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, PageMaker
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are PageMaker, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [PageMaker]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, PageMaker
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are PageMaker, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [P, a, g, e, M, a, k, e, r]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, PageMaker
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are PageMaker, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, including
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are including, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [including]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, including
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are including, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [i, n, c, l, u, d, i, n, g]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, including
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are including, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, versions
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are versions, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [versions]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, versions
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are versions, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [v, e, r, s, i, o, n, s]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, versions
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are versions, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are of, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [of]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [o, f]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are of, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Lorem
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Lorem, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [Lorem]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Lorem
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Lorem, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [L, o, r, e, m]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, Lorem
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Lorem, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum.
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Ipsum., WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [Ipsum]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum.
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are Ipsum., MARK
19:27:52 DEBUG SplitServiceImpl split - return value is [, .]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [.]
19:27:52 DEBUG LexemeParser handleSplit - started
19:27:52 DEBUG LexemeParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English., LEXEME
19:27:52 DEBUG SplitServiceImpl split - return value is [It, is, a, long, established, fact, that, a, reader, will, be, distracted, by, the, readable, content, of, a, page, when, looking, at, its, layout., The, point, of, using, Ipsum, is, that, it, has, a, more-or-less, normal, distribution, of, letters,, as, opposed, to, using, 'Content, here,, content, here',, making, it, look, like, readable, English.]
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are It, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [It]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [I, t]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are It, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are is, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [is]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [i, s]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are is, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are a, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [a]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [a]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are a, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, long
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are long, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [long]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, long
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are long, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [l, o, n, g]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, long
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are long, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, established
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are established, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [established]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, established
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are established, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [e, s, t, a, b, l, i, s, h, e, d]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, established
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are established, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, fact
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are fact, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [fact]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, fact
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are fact, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [f, a, c, t]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, fact
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are fact, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are that, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [that]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are that, MARK
19:27:52 DEBUG SplitServiceImpl split - return value is []
19:27:52 DEBUG WordParser handleSplit - started
19:27:52 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are a, WORD
19:27:52 DEBUG SplitServiceImpl split - return value is [a]
19:27:52 DEBUG CharacterParser handleSplit - started
19:27:52 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
19:27:52 DEBUG SplitServiceImpl split - started
19:27:52 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
19:27:52 DEBUG SplitServiceImpl split - return value is [a]
19:27:52 DEBUG MarkParser handleSplit - started
19:27:52 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are a, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, reader
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are reader, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [reader]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, reader
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are reader, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [r, e, a, d, e, r]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, reader
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are reader, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, will
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are will, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [will]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, will
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are will, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [w, i, l, l]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, will
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are will, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, be
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are be, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [be]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, be
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are be, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [b, e]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, be
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are be, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, distracted
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are distracted, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [distracted]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, distracted
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are distracted, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [d, i, s, t, r, a, c, t, e, d]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, distracted
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are distracted, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, by
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are by, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [by]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, by
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are by, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [b, y]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, by
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are by, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, the
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are the, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [the]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, the
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are the, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [t, h, e]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, the
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are the, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, readable
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are readable, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [readable]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, readable
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are readable, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [r, e, a, d, a, b, l, e]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, readable
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are readable, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, content
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are content, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [content]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, content
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are content, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [c, o, n, t, e, n, t]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, content
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are content, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are of, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [of]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [o, f]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are of, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are a, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [a]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [a]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are a, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, page
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are page, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [page]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, page
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are page, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [p, a, g, e]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, page
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are page, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, when
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are when, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [when]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, when
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are when, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [w, h, e, n]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, when
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are when, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, looking
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are looking, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [looking]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, looking
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are looking, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [l, o, o, k, i, n, g]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, looking
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are looking, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, at
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are at, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [at]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, at
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are at, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [a, t]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, at
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are at, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, its
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are its, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [its]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, its
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are its, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [i, t, s]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, its
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are its, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, layout.
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are layout., WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [layout]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, layout
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are layout, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [l, a, y, o, u, t]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}]}, layout.
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are layout., MARK
19:27:53 DEBUG SplitServiceImpl split - return value is [, .]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [.]
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, The
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are The, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [The]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, The
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are The, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [T, h, e]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, The
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are The, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, point
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are point, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [point]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, point
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are point, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [p, o, i, n, t]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, point
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are point, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are of, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [of]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [o, f]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are of, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, using
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are using, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [using]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, using
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are using, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [u, s, i, n, g]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, using
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are using, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Ipsum
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are Ipsum, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [Ipsum]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Ipsum
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are Ipsum, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [I, p, s, u, m]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, Ipsum
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are Ipsum, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are is, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [is]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [i, s]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are is, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are that, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [that]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are that, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, it
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are it, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [it]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, it
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are it, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [i, t]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, it
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are it, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, has
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are has, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [has]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, has
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are has, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [h, a, s]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, has
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are has, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are a, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [a]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [a]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are a, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, more-or-less
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are more-or-less, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [more-or-less]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, more-or-less
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are more-or-less, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [m, o, r, e, -, o, r, -, l, e, s, s]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, more-or-less
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are more-or-less, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, normal
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are normal, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [normal]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, normal
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are normal, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [n, o, r, m, a, l]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, normal
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are normal, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, distribution
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are distribution, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [distribution]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, distribution
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are distribution, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [d, i, s, t, r, i, b, u, t, i, o, n]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, distribution
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are distribution, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are of, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [of]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [o, f]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are of, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, letters,
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are letters,, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [letters]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, letters
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are letters, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [l, e, t, t, e, r, s]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}]}, letters,
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are letters,, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is [, ,]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [,]
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, as
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are as, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [as]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, as
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are as, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [a, s]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, as
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are as, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, opposed
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are opposed, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [opposed]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, opposed
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are opposed, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [o, p, p, o, s, e, d]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, opposed
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are opposed, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, to
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are to, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [to]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, to
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are to, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [t, o]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, to
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are to, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, using
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are using, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [using]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, using
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are using, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [u, s, i, n, g]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, using
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are using, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[]}, 'Content
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are 'Content, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is [']
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, '
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are ', CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [']
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[{type=MARK, components=[{'}]}]}, 'Content
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are 'Content, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [, Content]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, 
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are , CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Content
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are Content, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [C, o, n, t, e, n, t]
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, here,
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are here,, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [here]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, here
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are here, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [h, e, r, e]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}]}, here,
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are here,, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is [, ,]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ,
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are ,, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [,]
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, content
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are content, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [content]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, content
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are content, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [c, o, n, t, e, n, t]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, content
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are content, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, here',
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are here',, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [here]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, here
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are here, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [h, e, r, e]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}]}, here',
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are here',, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is [, ',]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ',
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are ',, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [', ,]
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, making
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are making, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [making]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, making
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are making, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [m, a, k, i, n, g]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, making
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are making, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, it
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are it, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [it]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, it
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are it, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [i, t]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, it
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are it, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, look
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are look, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [look]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, look
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are look, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [l, o, o, k]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, look
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are look, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, like
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are like, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [like]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, like
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are like, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [l, i, k, e]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, like
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are like, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, readable
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are readable, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [readable]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, readable
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are readable, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [r, e, a, d, a, b, l, e]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, readable
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are readable, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, English.
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are English., WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [English]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, English
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are English, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [E, n, g, l, i, s, h]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}]}, English.
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are English., MARK
19:27:53 DEBUG SplitServiceImpl split - return value is [, .]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [.]
19:27:53 DEBUG LexemeParser handleSplit - started
19:27:53 DEBUG LexemeParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, It is a established fact that a reader will be of a page when looking at its layout.
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are It is a established fact that a reader will be of a page when looking at its layout., LEXEME
19:27:53 DEBUG SplitServiceImpl split - return value is [It, is, a, established, fact, that, a, reader, will, be, of, a, page, when, looking, at, its, layout.]
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, It
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are It, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [It]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, It
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are It, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [I, t]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, It
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are It, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, is
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are is, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [is]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, is
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are is, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [i, s]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, is
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are is, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are a, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [a]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [a]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are a, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, established
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are established, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [established]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, established
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are established, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [e, s, t, a, b, l, i, s, h, e, d]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, established
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are established, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, fact
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are fact, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [fact]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, fact
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are fact, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [f, a, c, t]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, fact
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are fact, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, that
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are that, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [that]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, that
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are that, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [t, h, a, t]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, that
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are that, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are a, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [a]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [a]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are a, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, reader
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are reader, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [reader]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, reader
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are reader, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [r, e, a, d, e, r]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, reader
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are reader, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, will
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are will, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [will]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, will
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are will, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [w, i, l, l]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, will
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are will, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, be
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are be, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [be]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, be
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are be, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [b, e]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, be
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are be, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, of
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are of, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [of]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, of
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are of, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [o, f]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, of
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are of, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, a
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are a, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [a]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, a
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are a, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [a]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, a
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are a, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, page
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are page, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [page]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, page
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are page, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [p, a, g, e]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, page
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are page, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, when
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are when, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [when]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, when
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are when, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [w, h, e, n]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, when
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are when, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, looking
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are looking, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [looking]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, looking
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are looking, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [l, o, o, k, i, n, g]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, looking
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are looking, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, at
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are at, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [at]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, at
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are at, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [a, t]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, at
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are at, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, its
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are its, WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [its]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, its
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are its, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [i, t, s]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, its
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are its, MARK
19:27:53 DEBUG SplitServiceImpl split - return value is []
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, layout.
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are layout., WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [layout]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, layout
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are layout, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [l, a, y, o, u, t]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}]}, layout.
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are layout., MARK
19:27:53 DEBUG SplitServiceImpl split - return value is [, .]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, .
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are ., CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [.]
19:27:53 DEBUG LexemeParser handleSplit - started
19:27:53 DEBUG LexemeParser handleSplit - parameters are {type=PARAGRAPH, components=[]}, Bye...
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are Bye..., LEXEME
19:27:53 DEBUG SplitServiceImpl split - return value is [Bye...]
19:27:53 DEBUG WordParser handleSplit - started
19:27:53 DEBUG WordParser handleSplit - parameters are {type=LEXEME, components=[]}, Bye...
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are Bye..., WORD
19:27:53 DEBUG SplitServiceImpl split - return value is [Bye]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=WORD, components=[]}, Bye
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are Bye, CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [B, y, e]
19:27:53 DEBUG MarkParser handleSplit - started
19:27:53 DEBUG MarkParser handleSplit - parameters are {type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}]}, Bye...
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are Bye..., MARK
19:27:53 DEBUG SplitServiceImpl split - return value is [, ...]
19:27:53 DEBUG CharacterParser handleSplit - started
19:27:53 DEBUG CharacterParser handleSplit - parameters are {type=MARK, components=[]}, ...
19:27:53 DEBUG SplitServiceImpl split - started
19:27:53 DEBUG SplitServiceImpl split - parameters are ..., CHARACTER
19:27:53 DEBUG SplitServiceImpl split - return value is [., ., .]
19:27:53 DEBUG TextDAOImpl addTextObject - started
19:27:53 DEBUG TextDAOImpl addTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}
19:27:53 DEBUG TextServiceImpl createTree - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}
19:27:53 DEBUG Printer printTextObject - started
19:27:53 DEBUG Printer printTextObject - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}
19:28:19 DEBUG Controller executeTask - started
19:28:19 DEBUG Reader readCommand - started
19:28:23 DEBUG Reader readCommand - return value is join
19:28:23 DEBUG Join execute - started
19:28:23 DEBUG TextServiceImpl receiveTextCollection - started
19:28:23 DEBUG TextDAOImpl receiveTextCollection - started
19:28:23 DEBUG TextDAOImpl receiveTextCollection - return value is {0={type=TEXT, components=[{type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}}
19:28:23 DEBUG TextServiceImpl receiveTextCollection - return value is {0={type=TEXT, components=[{type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}}
19:28:23 DEBUG Printer printMap - started
19:28:23 DEBUG Printer printMap - parameter is {0={type=TEXT, components=[{type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}}
19:28:23 DEBUG Reader readKey - started
19:28:43 DEBUG Reader readKey - return value is 0
19:28:43 DEBUG TextServiceImpl findComponent - started
19:28:43 DEBUG TextServiceImpl findComponent - parameter is 0
19:28:43 DEBUG TextDAOImpl readElement - started
19:28:43 DEBUG TextDAOImpl readElement - parameter is 0
19:28:43 DEBUG TextDAOImpl readElement - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}
19:28:43 DEBUG TextServiceImpl findComponent - return value is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}
19:28:43 DEBUG TextServiceImpl joinTree - started
19:28:43 DEBUG TextServiceImpl joinTree - parameter is {type=TEXT, components=[{type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {u}, {r}, {v}, {i}, {v}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {n}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {i}, {v}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {e}, {n}, {t}, {u}, {r}, {i}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {u}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {l}, {s}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {a}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {l}, {e}, {c}, {t}, {r}, {o}, {n}, {i}, {c}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {y}, {p}, {e}, {s}, {e}, {t}, {t}, {i}, {n}, {g}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {m}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {s}, {e}, {n}, {t}, {i}, {a}, {l}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {n}, {c}, {h}, {a}, {n}, {g}, {e}, {d}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {p}, {u}, {l}, {a}, {r}, {i}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {l}, {e}, {a}, {s}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {e}, {t}, {r}, {a}, {s}, {e}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {h}, {e}, {e}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {a}, {i}, {n}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {s}, {s}, {a}, {g}, {e}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {n}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {c}, {e}, {n}, {t}, {l}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {t}, {h}, {d}, {e}, {s}, {k}, {t}, {o}, {p}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {u}, {b}, {l}, {i}, {s}, {h}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{s}, {o}, {f}, {t}, {w}, {a}, {r}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{A}, {l}, {d}, {u}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{P}, {a}, {g}, {e}, {M}, {a}, {k}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {n}, {c}, {l}, {u}, {d}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{v}, {e}, {r}, {s}, {i}, {o}, {n}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{L}, {o}, {r}, {e}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {a}, {c}, {t}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {y}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}, {type=LEXEME, components=[{type=WORD, components=[{T}, {h}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {o}, {i}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{I}, {p}, {s}, {u}, {m}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {o}, {r}, {e}, {-}, {o}, {r}, {-}, {l}, {e}, {s}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{n}, {o}, {r}, {m}, {a}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{d}, {i}, {s}, {t}, {r}, {i}, {b}, {u}, {t}, {i}, {o}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {e}, {t}, {t}, {e}, {r}, {s}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {p}, {p}, {o}, {s}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {o}]}]}, {type=LEXEME, components=[{type=WORD, components=[{u}, {s}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=MARK, components=[{'}]}, {type=WORD, components=[]}, {type=WORD, components=[{C}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{c}, {o}, {n}, {t}, {e}, {n}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{h}, {e}, {r}, {e}]}, {type=MARK, components=[{'}, {,}]}]}, {type=LEXEME, components=[{type=WORD, components=[{m}, {a}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {i}, {k}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {a}, {b}, {l}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{E}, {n}, {g}, {l}, {i}, {s}, {h}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{I}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{e}, {s}, {t}, {a}, {b}, {l}, {i}, {s}, {h}, {e}, {d}]}]}, {type=LEXEME, components=[{type=WORD, components=[{f}, {a}, {c}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{t}, {h}, {a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{r}, {e}, {a}, {d}, {e}, {r}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {i}, {l}, {l}]}]}, {type=LEXEME, components=[{type=WORD, components=[{b}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{o}, {f}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}]}]}, {type=LEXEME, components=[{type=WORD, components=[{p}, {a}, {g}, {e}]}]}, {type=LEXEME, components=[{type=WORD, components=[{w}, {h}, {e}, {n}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {o}, {o}, {k}, {i}, {n}, {g}]}]}, {type=LEXEME, components=[{type=WORD, components=[{a}, {t}]}]}, {type=LEXEME, components=[{type=WORD, components=[{i}, {t}, {s}]}]}, {type=LEXEME, components=[{type=WORD, components=[{l}, {a}, {y}, {o}, {u}, {t}]}, {type=MARK, components=[{.}]}]}]}, {type=PARAGRAPH, components=[{type=LEXEME, components=[{type=WORD, components=[{B}, {y}, {e}]}, {type=MARK, components=[{.}, {.}, {.}]}]}]}]}
19:28:43 DEBUG TextServiceImpl joinTree - return value is Ithassurvivednotonlyfivecenturies,butalsotheleapintoelectronictypesetting,remainingessentiallyunchanged.ItwaspopularisedinthewiththereleaseofLetrasetsheetscontainingLoremIpsumpassages,andmorerecentlywithdesktoppublishingsoftwarelikeAldusPageMakerincludingversionsofLoremIpsum
Itisalongestablishedfactthatareaderwillbedistractedbythereadablecontentofapagewhenlookingatitslayout.ThepointofusingIpsumisthatithasamore-or-lessnormaldistributionofletters,asopposedtousing'Contenthere,contenthere',makingitlooklikereadableEnglish
Itisaestablishedfactthatareaderwillbeofapagewhenlookingatitslayout
Bye..
19:28:43 DEBUG Printer printText - started
19:28:43 DEBUG Printer printText - parameter is Ithassurvivednotonlyfivecenturies,butalsotheleapintoelectronictypesetting,remainingessentiallyunchanged.ItwaspopularisedinthewiththereleaseofLetrasetsheetscontainingLoremIpsumpassages,andmorerecentlywithdesktoppublishingsoftwarelikeAldusPageMakerincludingversionsofLoremIpsum
Itisalongestablishedfactthatareaderwillbedistractedbythereadablecontentofapagewhenlookingatitslayout.ThepointofusingIpsumisthatithasamore-or-lessnormaldistributionofletters,asopposedtousing'Contenthere,contenthere',makingitlooklikereadableEnglish
Itisaestablishedfactthatareaderwillbeofapagewhenlookingatitslayout
Bye..
19:28:43 DEBUG Controller executeTask - started
19:28:43 DEBUG Reader readCommand - started
